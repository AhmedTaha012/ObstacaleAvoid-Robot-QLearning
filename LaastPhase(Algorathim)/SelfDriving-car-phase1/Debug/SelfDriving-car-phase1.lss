
SelfDriving-car-phase1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000126  00800100  00001c64  00001cf8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c64  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000082  00800226  00800226  00001e1e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00001ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000210e  00000000  00000000  0000205c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bf5  00000000  00000000  0000416a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f73  00000000  00000000  00004d5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005b4  00000000  00000000  00005cd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000816  00000000  00000000  00006288  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013f3  00000000  00000000  00006a9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  00007e91  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 84 06 	jmp	0xd08	; 0xd08 <__vector_1>
       8:	0c 94 f0 06 	jmp	0xde0	; 0xde0 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 95 07 	jmp	0xf2a	; 0xf2a <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 e6       	ldi	r30, 0x64	; 100
      7c:	fc e1       	ldi	r31, 0x1C	; 28
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 32       	cpi	r26, 0x26	; 38
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a6 e2       	ldi	r26, 0x26	; 38
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a8 3a       	cpi	r26, 0xA8	; 168
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 19 04 	call	0x832	; 0x832 <main>
      9e:	0c 94 30 0e 	jmp	0x1c60	; 0x1c60 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Serial_monitor_int>:
	{
		Serial_print(distance_str_1[i]);
		_delay_ms(20);
	}
	Serial_print(' ');
}
      a6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
      aa:	87 e6       	ldi	r24, 0x67	; 103
      ac:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
      b0:	88 e0       	ldi	r24, 0x08	; 8
      b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
      b6:	86 e0       	ldi	r24, 0x06	; 6
      b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
      bc:	08 95       	ret

000000be <Serial_print>:
      be:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
      c2:	08 95       	ret

000000c4 <update_epsilon>:
      c4:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <epsilon>
      c8:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <epsilon+0x1>
      cc:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <epsilon+0x2>
      d0:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <epsilon+0x3>
      d4:	28 e4       	ldi	r18, 0x48	; 72
      d6:	31 ee       	ldi	r19, 0xE1	; 225
      d8:	4a e7       	ldi	r20, 0x7A	; 122
      da:	5f e3       	ldi	r21, 0x3F	; 63
      dc:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>
      e0:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <epsilon>
      e4:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <epsilon+0x1>
      e8:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <epsilon+0x2>
      ec:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <epsilon+0x3>
      f0:	08 95       	ret

000000f2 <Explore_Exploit>:
      f2:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <rand>
      f6:	64 e6       	ldi	r22, 0x64	; 100
      f8:	70 e0       	ldi	r23, 0x00	; 0
      fa:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
      fe:	bc 01       	movw	r22, r24
     100:	99 0f       	add	r25, r25
     102:	88 0b       	sbc	r24, r24
     104:	99 0b       	sbc	r25, r25
     106:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
     10a:	20 e0       	ldi	r18, 0x00	; 0
     10c:	30 e0       	ldi	r19, 0x00	; 0
     10e:	48 ec       	ldi	r20, 0xC8	; 200
     110:	52 e4       	ldi	r21, 0x42	; 66
     112:	0e 94 98 08 	call	0x1130	; 0x1130 <__divsf3>
     116:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <epsilon>
     11a:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <epsilon+0x1>
     11e:	40 91 3e 01 	lds	r20, 0x013E	; 0x80013e <epsilon+0x2>
     122:	50 91 3f 01 	lds	r21, 0x013F	; 0x80013f <epsilon+0x3>
     126:	0e 94 93 08 	call	0x1126	; 0x1126 <__cmpsf2>
     12a:	88 23       	and	r24, r24
     12c:	14 f4       	brge	.+4      	; 0x132 <Explore_Exploit+0x40>
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	08 95       	ret
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	08 95       	ret

00000136 <rand_Action>:
     136:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <rand>
     13a:	63 e0       	ldi	r22, 0x03	; 3
     13c:	70 e0       	ldi	r23, 0x00	; 0
     13e:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     142:	08 95       	ret

00000144 <sensor_reading>:
     144:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <get_states_of_ultrasonic>
     148:	08 95       	ret

0000014a <MAXIMUM>:
     14a:	6f 92       	push	r6
     14c:	7f 92       	push	r7
     14e:	8f 92       	push	r8
     150:	9f 92       	push	r9
     152:	af 92       	push	r10
     154:	bf 92       	push	r11
     156:	cf 92       	push	r12
     158:	df 92       	push	r13
     15a:	ef 92       	push	r14
     15c:	ff 92       	push	r15
     15e:	0f 93       	push	r16
     160:	1f 93       	push	r17
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	ec 01       	movw	r28, r24
     168:	00 e0       	ldi	r16, 0x00	; 0
     16a:	10 e0       	ldi	r17, 0x00	; 0
     16c:	81 2c       	mov	r8, r1
     16e:	0f 2e       	mov	r0, r31
     170:	f0 ec       	ldi	r31, 0xC0	; 192
     172:	af 2e       	mov	r10, r31
     174:	f0 2d       	mov	r31, r0
     176:	0f 2e       	mov	r0, r31
     178:	f9 e7       	ldi	r31, 0x79	; 121
     17a:	bf 2e       	mov	r11, r31
     17c:	f0 2d       	mov	r31, r0
     17e:	0f 2e       	mov	r0, r31
     180:	f4 ec       	ldi	r31, 0xC4	; 196
     182:	9f 2e       	mov	r9, r31
     184:	f0 2d       	mov	r31, r0
     186:	24 c0       	rjmp	.+72     	; 0x1d0 <MAXIMUM+0x86>
     188:	fe 01       	movw	r30, r28
     18a:	ee 0f       	add	r30, r30
     18c:	ff 1f       	adc	r31, r31
     18e:	ec 0f       	add	r30, r28
     190:	fd 1f       	adc	r31, r29
     192:	e0 0f       	add	r30, r16
     194:	f1 1f       	adc	r31, r17
     196:	ee 0f       	add	r30, r30
     198:	ff 1f       	adc	r31, r31
     19a:	ee 0f       	add	r30, r30
     19c:	ff 1f       	adc	r31, r31
     19e:	ea 5d       	subi	r30, 0xDA	; 218
     1a0:	fd 4f       	sbci	r31, 0xFD	; 253
     1a2:	c0 80       	ld	r12, Z
     1a4:	d1 80       	ldd	r13, Z+1	; 0x01
     1a6:	e2 80       	ldd	r14, Z+2	; 0x02
     1a8:	f3 80       	ldd	r15, Z+3	; 0x03
     1aa:	2c 2d       	mov	r18, r12
     1ac:	3d 2d       	mov	r19, r13
     1ae:	4e 2d       	mov	r20, r14
     1b0:	5f 2d       	mov	r21, r15
     1b2:	68 2d       	mov	r22, r8
     1b4:	7a 2d       	mov	r23, r10
     1b6:	8b 2d       	mov	r24, r11
     1b8:	99 2d       	mov	r25, r9
     1ba:	0e 94 93 08 	call	0x1126	; 0x1126 <__cmpsf2>
     1be:	88 23       	and	r24, r24
     1c0:	2c f4       	brge	.+10     	; 0x1cc <MAXIMUM+0x82>
     1c2:	38 01       	movw	r6, r16
     1c4:	8c 2c       	mov	r8, r12
     1c6:	ad 2c       	mov	r10, r13
     1c8:	be 2c       	mov	r11, r14
     1ca:	9f 2c       	mov	r9, r15
     1cc:	0f 5f       	subi	r16, 0xFF	; 255
     1ce:	1f 4f       	sbci	r17, 0xFF	; 255
     1d0:	03 30       	cpi	r16, 0x03	; 3
     1d2:	11 05       	cpc	r17, r1
     1d4:	cc f2       	brlt	.-78     	; 0x188 <MAXIMUM+0x3e>
     1d6:	ce 01       	movw	r24, r28
     1d8:	88 0f       	add	r24, r24
     1da:	99 1f       	adc	r25, r25
     1dc:	c8 0f       	add	r28, r24
     1de:	d9 1f       	adc	r29, r25
     1e0:	c6 0d       	add	r28, r6
     1e2:	d7 1d       	adc	r29, r7
     1e4:	cc 0f       	add	r28, r28
     1e6:	dd 1f       	adc	r29, r29
     1e8:	cc 0f       	add	r28, r28
     1ea:	dd 1f       	adc	r29, r29
     1ec:	ca 5d       	subi	r28, 0xDA	; 218
     1ee:	dd 4f       	sbci	r29, 0xFD	; 253
     1f0:	68 81       	ld	r22, Y
     1f2:	79 81       	ldd	r23, Y+1	; 0x01
     1f4:	8a 81       	ldd	r24, Y+2	; 0x02
     1f6:	9b 81       	ldd	r25, Y+3	; 0x03
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	1f 91       	pop	r17
     1fe:	0f 91       	pop	r16
     200:	ff 90       	pop	r15
     202:	ef 90       	pop	r14
     204:	df 90       	pop	r13
     206:	cf 90       	pop	r12
     208:	bf 90       	pop	r11
     20a:	af 90       	pop	r10
     20c:	9f 90       	pop	r9
     20e:	8f 90       	pop	r8
     210:	7f 90       	pop	r7
     212:	6f 90       	pop	r6
     214:	08 95       	ret

00000216 <Update>:
     216:	4f 92       	push	r4
     218:	5f 92       	push	r5
     21a:	6f 92       	push	r6
     21c:	7f 92       	push	r7
     21e:	8f 92       	push	r8
     220:	9f 92       	push	r9
     222:	af 92       	push	r10
     224:	bf 92       	push	r11
     226:	cf 92       	push	r12
     228:	df 92       	push	r13
     22a:	ef 92       	push	r14
     22c:	ff 92       	push	r15
     22e:	0f 93       	push	r16
     230:	1f 93       	push	r17
     232:	cf 93       	push	r28
     234:	df 93       	push	r29
     236:	cd b7       	in	r28, 0x3d	; 61
     238:	de b7       	in	r29, 0x3e	; 62
     23a:	28 97       	sbiw	r28, 0x08	; 8
     23c:	0f b6       	in	r0, 0x3f	; 63
     23e:	f8 94       	cli
     240:	de bf       	out	0x3e, r29	; 62
     242:	0f be       	out	0x3f, r0	; 63
     244:	cd bf       	out	0x3d, r28	; 61
     246:	0d 83       	std	Y+5, r16	; 0x05
     248:	1e 83       	std	Y+6, r17	; 0x06
     24a:	2f 83       	std	Y+7, r18	; 0x07
     24c:	38 87       	std	Y+8, r19	; 0x08
     24e:	8c 01       	movw	r16, r24
     250:	00 0f       	add	r16, r16
     252:	11 1f       	adc	r17, r17
     254:	08 0f       	add	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	04 0f       	add	r16, r20
     25a:	15 1f       	adc	r17, r21
     25c:	00 0f       	add	r16, r16
     25e:	11 1f       	adc	r17, r17
     260:	00 0f       	add	r16, r16
     262:	11 1f       	adc	r17, r17
     264:	0a 5d       	subi	r16, 0xDA	; 218
     266:	1d 4f       	sbci	r17, 0xFD	; 253
     268:	d8 01       	movw	r26, r16
     26a:	4d 90       	ld	r4, X+
     26c:	5d 90       	ld	r5, X+
     26e:	6d 90       	ld	r6, X+
     270:	7c 90       	ld	r7, X
     272:	40 92 93 02 	sts	0x0293, r4	; 0x800293 <Q_OLD>
     276:	50 92 94 02 	sts	0x0294, r5	; 0x800294 <Q_OLD+0x1>
     27a:	60 92 95 02 	sts	0x0295, r6	; 0x800295 <Q_OLD+0x2>
     27e:	70 92 96 02 	sts	0x0296, r7	; 0x800296 <Q_OLD+0x3>
     282:	cb 01       	movw	r24, r22
     284:	0e 94 a5 00 	call	0x14a	; 0x14a <MAXIMUM>
     288:	69 83       	std	Y+1, r22	; 0x01
     28a:	7a 83       	std	Y+2, r23	; 0x02
     28c:	8b 83       	std	Y+3, r24	; 0x03
     28e:	9c 83       	std	Y+4, r25	; 0x04
     290:	60 93 9b 02 	sts	0x029B, r22	; 0x80029b <Q_MAX>
     294:	70 93 9c 02 	sts	0x029C, r23	; 0x80029c <Q_MAX+0x1>
     298:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <Q_MAX+0x2>
     29c:	90 93 9e 02 	sts	0x029E, r25	; 0x80029e <Q_MAX+0x3>
     2a0:	a7 01       	movw	r20, r14
     2a2:	96 01       	movw	r18, r12
     2a4:	60 e0       	ldi	r22, 0x00	; 0
     2a6:	70 e0       	ldi	r23, 0x00	; 0
     2a8:	80 e8       	ldi	r24, 0x80	; 128
     2aa:	9f e3       	ldi	r25, 0x3F	; 63
     2ac:	0e 94 26 08 	call	0x104c	; 0x104c <__subsf3>
     2b0:	9b 01       	movw	r18, r22
     2b2:	ac 01       	movw	r20, r24
     2b4:	c3 01       	movw	r24, r6
     2b6:	b2 01       	movw	r22, r4
     2b8:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>
     2bc:	2b 01       	movw	r4, r22
     2be:	3c 01       	movw	r6, r24
     2c0:	a5 01       	movw	r20, r10
     2c2:	94 01       	movw	r18, r8
     2c4:	69 81       	ldd	r22, Y+1	; 0x01
     2c6:	7a 81       	ldd	r23, Y+2	; 0x02
     2c8:	8b 81       	ldd	r24, Y+3	; 0x03
     2ca:	9c 81       	ldd	r25, Y+4	; 0x04
     2cc:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>
     2d0:	2d 81       	ldd	r18, Y+5	; 0x05
     2d2:	3e 81       	ldd	r19, Y+6	; 0x06
     2d4:	4f 81       	ldd	r20, Y+7	; 0x07
     2d6:	58 85       	ldd	r21, Y+8	; 0x08
     2d8:	0e 94 27 08 	call	0x104e	; 0x104e <__addsf3>
     2dc:	9b 01       	movw	r18, r22
     2de:	ac 01       	movw	r20, r24
     2e0:	c7 01       	movw	r24, r14
     2e2:	b6 01       	movw	r22, r12
     2e4:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>
     2e8:	9b 01       	movw	r18, r22
     2ea:	ac 01       	movw	r20, r24
     2ec:	c3 01       	movw	r24, r6
     2ee:	b2 01       	movw	r22, r4
     2f0:	0e 94 27 08 	call	0x104e	; 0x104e <__addsf3>
     2f4:	60 93 8d 02 	sts	0x028D, r22	; 0x80028d <Q_NEW>
     2f8:	70 93 8e 02 	sts	0x028E, r23	; 0x80028e <Q_NEW+0x1>
     2fc:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <Q_NEW+0x2>
     300:	90 93 90 02 	sts	0x0290, r25	; 0x800290 <Q_NEW+0x3>
     304:	f8 01       	movw	r30, r16
     306:	60 83       	st	Z, r22
     308:	71 83       	std	Z+1, r23	; 0x01
     30a:	82 83       	std	Z+2, r24	; 0x02
     30c:	93 83       	std	Z+3, r25	; 0x03
     30e:	28 96       	adiw	r28, 0x08	; 8
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	f8 94       	cli
     314:	de bf       	out	0x3e, r29	; 62
     316:	0f be       	out	0x3f, r0	; 63
     318:	cd bf       	out	0x3d, r28	; 61
     31a:	df 91       	pop	r29
     31c:	cf 91       	pop	r28
     31e:	1f 91       	pop	r17
     320:	0f 91       	pop	r16
     322:	ff 90       	pop	r15
     324:	ef 90       	pop	r14
     326:	df 90       	pop	r13
     328:	cf 90       	pop	r12
     32a:	bf 90       	pop	r11
     32c:	af 90       	pop	r10
     32e:	9f 90       	pop	r9
     330:	8f 90       	pop	r8
     332:	7f 90       	pop	r7
     334:	6f 90       	pop	r6
     336:	5f 90       	pop	r5
     338:	4f 90       	pop	r4
     33a:	08 95       	ret

0000033c <MAX_Action_InState>:
     33c:	6f 92       	push	r6
     33e:	7f 92       	push	r7
     340:	8f 92       	push	r8
     342:	9f 92       	push	r9
     344:	af 92       	push	r10
     346:	bf 92       	push	r11
     348:	cf 92       	push	r12
     34a:	df 92       	push	r13
     34c:	ef 92       	push	r14
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	8c 01       	movw	r16, r24
     35a:	c0 e0       	ldi	r28, 0x00	; 0
     35c:	d0 e0       	ldi	r29, 0x00	; 0
     35e:	81 2c       	mov	r8, r1
     360:	0f 2e       	mov	r0, r31
     362:	f0 ec       	ldi	r31, 0xC0	; 192
     364:	af 2e       	mov	r10, r31
     366:	f0 2d       	mov	r31, r0
     368:	0f 2e       	mov	r0, r31
     36a:	f9 e7       	ldi	r31, 0x79	; 121
     36c:	bf 2e       	mov	r11, r31
     36e:	f0 2d       	mov	r31, r0
     370:	0f 2e       	mov	r0, r31
     372:	f4 ec       	ldi	r31, 0xC4	; 196
     374:	9f 2e       	mov	r9, r31
     376:	f0 2d       	mov	r31, r0
     378:	23 c0       	rjmp	.+70     	; 0x3c0 <MAX_Action_InState+0x84>
     37a:	f8 01       	movw	r30, r16
     37c:	ee 0f       	add	r30, r30
     37e:	ff 1f       	adc	r31, r31
     380:	e0 0f       	add	r30, r16
     382:	f1 1f       	adc	r31, r17
     384:	ec 0f       	add	r30, r28
     386:	fd 1f       	adc	r31, r29
     388:	ee 0f       	add	r30, r30
     38a:	ff 1f       	adc	r31, r31
     38c:	ee 0f       	add	r30, r30
     38e:	ff 1f       	adc	r31, r31
     390:	ea 5d       	subi	r30, 0xDA	; 218
     392:	fd 4f       	sbci	r31, 0xFD	; 253
     394:	c0 80       	ld	r12, Z
     396:	d1 80       	ldd	r13, Z+1	; 0x01
     398:	e2 80       	ldd	r14, Z+2	; 0x02
     39a:	f3 80       	ldd	r15, Z+3	; 0x03
     39c:	2c 2d       	mov	r18, r12
     39e:	3d 2d       	mov	r19, r13
     3a0:	4e 2d       	mov	r20, r14
     3a2:	5f 2d       	mov	r21, r15
     3a4:	68 2d       	mov	r22, r8
     3a6:	7a 2d       	mov	r23, r10
     3a8:	8b 2d       	mov	r24, r11
     3aa:	99 2d       	mov	r25, r9
     3ac:	0e 94 93 08 	call	0x1126	; 0x1126 <__cmpsf2>
     3b0:	88 23       	and	r24, r24
     3b2:	2c f4       	brge	.+10     	; 0x3be <MAX_Action_InState+0x82>
     3b4:	3e 01       	movw	r6, r28
     3b6:	8c 2c       	mov	r8, r12
     3b8:	ad 2c       	mov	r10, r13
     3ba:	be 2c       	mov	r11, r14
     3bc:	9f 2c       	mov	r9, r15
     3be:	21 96       	adiw	r28, 0x01	; 1
     3c0:	c3 30       	cpi	r28, 0x03	; 3
     3c2:	d1 05       	cpc	r29, r1
     3c4:	d4 f2       	brlt	.-76     	; 0x37a <MAX_Action_InState+0x3e>
     3c6:	b3 01       	movw	r22, r6
     3c8:	77 0c       	add	r7, r7
     3ca:	88 0b       	sbc	r24, r24
     3cc:	99 0b       	sbc	r25, r25
     3ce:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	0f 91       	pop	r16
     3da:	ff 90       	pop	r15
     3dc:	ef 90       	pop	r14
     3de:	df 90       	pop	r13
     3e0:	cf 90       	pop	r12
     3e2:	bf 90       	pop	r11
     3e4:	af 90       	pop	r10
     3e6:	9f 90       	pop	r9
     3e8:	8f 90       	pop	r8
     3ea:	7f 90       	pop	r7
     3ec:	6f 90       	pop	r6
     3ee:	08 95       	ret

000003f0 <adc_init>:
     3f0:	ea e7       	ldi	r30, 0x7A	; 122
     3f2:	f0 e0       	ldi	r31, 0x00	; 0
     3f4:	80 81       	ld	r24, Z
     3f6:	87 60       	ori	r24, 0x07	; 7
     3f8:	80 83       	st	Z, r24
     3fa:	ac e7       	ldi	r26, 0x7C	; 124
     3fc:	b0 e0       	ldi	r27, 0x00	; 0
     3fe:	8c 91       	ld	r24, X
     400:	80 64       	ori	r24, 0x40	; 64
     402:	8c 93       	st	X, r24
     404:	80 81       	ld	r24, Z
     406:	80 68       	ori	r24, 0x80	; 128
     408:	80 83       	st	Z, r24
     40a:	80 81       	ld	r24, Z
     40c:	80 64       	ori	r24, 0x40	; 64
     40e:	80 83       	st	Z, r24
     410:	08 95       	ret

00000412 <read_adc>:
     412:	ec e7       	ldi	r30, 0x7C	; 124
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	90 81       	ld	r25, Z
     418:	90 7f       	andi	r25, 0xF0	; 240
     41a:	90 83       	st	Z, r25
     41c:	90 81       	ld	r25, Z
     41e:	89 2b       	or	r24, r25
     420:	80 83       	st	Z, r24
     422:	ea e7       	ldi	r30, 0x7A	; 122
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	80 81       	ld	r24, Z
     428:	80 64       	ori	r24, 0x40	; 64
     42a:	80 83       	st	Z, r24
     42c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     430:	86 fd       	sbrc	r24, 6
     432:	fc cf       	rjmp	.-8      	; 0x42c <read_adc+0x1a>
     434:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     438:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     43c:	08 95       	ret

0000043e <seed_init>:
     43e:	0f 93       	push	r16
     440:	1f 93       	push	r17
     442:	cf 93       	push	r28
     444:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <adc_init>
     448:	c0 e0       	ldi	r28, 0x00	; 0
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0b c0       	rjmp	.+22     	; 0x466 <seed_init+0x28>
     450:	8c 01       	movw	r16, r24
     452:	00 0f       	add	r16, r16
     454:	11 1f       	adc	r17, r17
     456:	8c 2f       	mov	r24, r28
     458:	0e 94 09 02 	call	0x412	; 0x412 <read_adc>
     45c:	81 70       	andi	r24, 0x01	; 1
     45e:	99 27       	eor	r25, r25
     460:	80 2b       	or	r24, r16
     462:	91 2b       	or	r25, r17
     464:	cf 5f       	subi	r28, 0xFF	; 255
     466:	c0 31       	cpi	r28, 0x10	; 16
     468:	98 f3       	brcs	.-26     	; 0x450 <seed_init+0x12>
     46a:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <srand>
     46e:	cf 91       	pop	r28
     470:	1f 91       	pop	r17
     472:	0f 91       	pop	r16
     474:	08 95       	ret

00000476 <prints_int>:
char str[5]="ahmed";
void prints_int(int value,int size )
{   sprintf(distance_str_1, "%d", value);
     476:	0f 93       	push	r16
     478:	1f 93       	push	r17
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	8b 01       	movw	r16, r22
     480:	9f 93       	push	r25
     482:	8f 93       	push	r24
     484:	88 e4       	ldi	r24, 0x48	; 72
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	9f 93       	push	r25
     48a:	8f 93       	push	r24
     48c:	82 e6       	ldi	r24, 0x62	; 98
     48e:	92 e0       	ldi	r25, 0x02	; 2
     490:	9f 93       	push	r25
     492:	8f 93       	push	r24
     494:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <sprintf>
	for (int i=0;i<size;i++)
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	c0 e0       	ldi	r28, 0x00	; 0
     4a6:	d0 e0       	ldi	r29, 0x00	; 0
     4a8:	0d c0       	rjmp	.+26     	; 0x4c4 <prints_int+0x4e>
	{
	Serial_print(distance_str_1[i]);
     4aa:	fe 01       	movw	r30, r28
     4ac:	ee 59       	subi	r30, 0x9E	; 158
     4ae:	fd 4f       	sbci	r31, 0xFD	; 253
     4b0:	80 81       	ld	r24, Z
     4b2:	0e 94 5f 00 	call	0xbe	; 0xbe <Serial_print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4b6:	87 e8       	ldi	r24, 0x87	; 135
     4b8:	93 e1       	ldi	r25, 0x13	; 19
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <prints_int+0x44>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <prints_int+0x4a>
     4c0:	00 00       	nop
	Serial_print(' ');
}
char str[5]="ahmed";
void prints_int(int value,int size )
{   sprintf(distance_str_1, "%d", value);
	for (int i=0;i<size;i++)
     4c2:	21 96       	adiw	r28, 0x01	; 1
     4c4:	c0 17       	cp	r28, r16
     4c6:	d1 07       	cpc	r29, r17
     4c8:	84 f3       	brlt	.-32     	; 0x4aa <prints_int+0x34>
	{
	Serial_print(distance_str_1[i]);
	_delay_ms(20);
	}
	//Serial_print('\n');
}
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	1f 91       	pop	r17
     4d0:	0f 91       	pop	r16
     4d2:	08 95       	ret

000004d4 <prints_String>:
void prints_String(char value[],int size )
{   
     4d4:	ef 92       	push	r14
     4d6:	ff 92       	push	r15
     4d8:	0f 93       	push	r16
     4da:	1f 93       	push	r17
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	7c 01       	movw	r14, r24
     4e2:	8b 01       	movw	r16, r22
	for (int i=0;i<size;i++)
     4e4:	c0 e0       	ldi	r28, 0x00	; 0
     4e6:	d0 e0       	ldi	r29, 0x00	; 0
     4e8:	0d c0       	rjmp	.+26     	; 0x504 <prints_String+0x30>
	{
		Serial_print(value[i]);
     4ea:	f7 01       	movw	r30, r14
     4ec:	ec 0f       	add	r30, r28
     4ee:	fd 1f       	adc	r31, r29
     4f0:	80 81       	ld	r24, Z
     4f2:	0e 94 5f 00 	call	0xbe	; 0xbe <Serial_print>
     4f6:	87 e8       	ldi	r24, 0x87	; 135
     4f8:	93 e1       	ldi	r25, 0x13	; 19
     4fa:	01 97       	sbiw	r24, 0x01	; 1
     4fc:	f1 f7       	brne	.-4      	; 0x4fa <prints_String+0x26>
     4fe:	00 c0       	rjmp	.+0      	; 0x500 <prints_String+0x2c>
     500:	00 00       	nop
	}
	//Serial_print('\n');
}
void prints_String(char value[],int size )
{   
	for (int i=0;i<size;i++)
     502:	21 96       	adiw	r28, 0x01	; 1
     504:	c0 17       	cp	r28, r16
     506:	d1 07       	cpc	r29, r17
     508:	84 f3       	brlt	.-32     	; 0x4ea <prints_String+0x16>
	{
		Serial_print(value[i]);
		_delay_ms(20);
	}
	
}
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	1f 91       	pop	r17
     510:	0f 91       	pop	r16
     512:	ff 90       	pop	r15
     514:	ef 90       	pop	r14
     516:	08 95       	ret

00000518 <double2string>:
char integers[];
char floats[];
void double2string (double number, char integers[], char floats[]){
     518:	2f 92       	push	r2
     51a:	3f 92       	push	r3
     51c:	4f 92       	push	r4
     51e:	5f 92       	push	r5
     520:	6f 92       	push	r6
     522:	7f 92       	push	r7
     524:	8f 92       	push	r8
     526:	9f 92       	push	r9
     528:	af 92       	push	r10
     52a:	bf 92       	push	r11
     52c:	cf 92       	push	r12
     52e:	df 92       	push	r13
     530:	ef 92       	push	r14
     532:	ff 92       	push	r15
     534:	0f 93       	push	r16
     536:	1f 93       	push	r17
     538:	cf 93       	push	r28
     53a:	df 93       	push	r29
     53c:	00 d0       	rcall	.+0      	; 0x53e <double2string+0x26>
     53e:	00 d0       	rcall	.+0      	; 0x540 <double2string+0x28>
     540:	00 d0       	rcall	.+0      	; 0x542 <double2string+0x2a>
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	69 83       	std	Y+1, r22	; 0x01
     548:	7a 83       	std	Y+2, r23	; 0x02
     54a:	8b 83       	std	Y+3, r24	; 0x03
     54c:	9c 83       	std	Y+4, r25	; 0x04
     54e:	8a 01       	movw	r16, r20
     550:	3e 83       	std	Y+6, r19	; 0x06
     552:	2d 83       	std	Y+5, r18	; 0x05
	integers[3] = (  (int)number)%10;
     554:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fixsfsi>
     558:	2b 01       	movw	r4, r22
     55a:	3c 01       	movw	r6, r24
     55c:	0f 2e       	mov	r0, r31
     55e:	fa e0       	ldi	r31, 0x0A	; 10
     560:	cf 2e       	mov	r12, r31
     562:	d1 2c       	mov	r13, r1
     564:	f0 2d       	mov	r31, r0
     566:	cb 01       	movw	r24, r22
     568:	b6 01       	movw	r22, r12
     56a:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     56e:	9c 01       	movw	r18, r24
     570:	d8 01       	movw	r26, r16
     572:	13 96       	adiw	r26, 0x03	; 3
     574:	8c 93       	st	X, r24
	integers[2] = ( ((int)number)%100 - ((int)number)%10 )/10;
     576:	0f 2e       	mov	r0, r31
     578:	f4 e6       	ldi	r31, 0x64	; 100
     57a:	ef 2e       	mov	r14, r31
     57c:	f1 2c       	mov	r15, r1
     57e:	f0 2d       	mov	r31, r0
     580:	c2 01       	movw	r24, r4
     582:	b7 01       	movw	r22, r14
     584:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     588:	5c 01       	movw	r10, r24
     58a:	82 1b       	sub	r24, r18
     58c:	93 0b       	sbc	r25, r19
     58e:	b6 01       	movw	r22, r12
     590:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     594:	d8 01       	movw	r26, r16
     596:	12 96       	adiw	r26, 0x02	; 2
     598:	6c 93       	st	X, r22
	integers[1] = ( ((int)number)%1000 - ((int)number)%100 )/100;
     59a:	0f 2e       	mov	r0, r31
     59c:	f8 ee       	ldi	r31, 0xE8	; 232
     59e:	2f 2e       	mov	r2, r31
     5a0:	f3 e0       	ldi	r31, 0x03	; 3
     5a2:	3f 2e       	mov	r3, r31
     5a4:	f0 2d       	mov	r31, r0
     5a6:	c2 01       	movw	r24, r4
     5a8:	b1 01       	movw	r22, r2
     5aa:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     5ae:	9c 01       	movw	r18, r24
     5b0:	8a 19       	sub	r24, r10
     5b2:	9b 09       	sbc	r25, r11
     5b4:	b7 01       	movw	r22, r14
     5b6:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     5ba:	d8 01       	movw	r26, r16
     5bc:	11 96       	adiw	r26, 0x01	; 1
     5be:	6c 93       	st	X, r22
    integers[0] = ( ((int)number)%10000 - ((int)number)%1000 )/1000;
     5c0:	0f 2e       	mov	r0, r31
     5c2:	f0 e1       	ldi	r31, 0x10	; 16
     5c4:	8f 2e       	mov	r8, r31
     5c6:	f7 e2       	ldi	r31, 0x27	; 39
     5c8:	9f 2e       	mov	r9, r31
     5ca:	f0 2d       	mov	r31, r0
     5cc:	c2 01       	movw	r24, r4
     5ce:	b4 01       	movw	r22, r8
     5d0:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     5d4:	82 1b       	sub	r24, r18
     5d6:	93 0b       	sbc	r25, r19
     5d8:	b1 01       	movw	r22, r2
     5da:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     5de:	f8 01       	movw	r30, r16
     5e0:	60 83       	st	Z, r22
	number -= (int)number;
     5e2:	b2 01       	movw	r22, r4
     5e4:	55 0c       	add	r5, r5
     5e6:	88 0b       	sbc	r24, r24
     5e8:	99 0b       	sbc	r25, r25
     5ea:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
     5ee:	9b 01       	movw	r18, r22
     5f0:	ac 01       	movw	r20, r24
     5f2:	69 81       	ldd	r22, Y+1	; 0x01
     5f4:	7a 81       	ldd	r23, Y+2	; 0x02
     5f6:	8b 81       	ldd	r24, Y+3	; 0x03
     5f8:	9c 81       	ldd	r25, Y+4	; 0x04
     5fa:	0e 94 26 08 	call	0x104c	; 0x104c <__subsf3>
	number = number* 10000;
     5fe:	20 e0       	ldi	r18, 0x00	; 0
     600:	30 e4       	ldi	r19, 0x40	; 64
     602:	4c e1       	ldi	r20, 0x1C	; 28
     604:	56 e4       	ldi	r21, 0x46	; 70
     606:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>

	floats[3] = (  (int)number)%10;
     60a:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fixsfsi>
     60e:	9b 01       	movw	r18, r22
     610:	cb 01       	movw	r24, r22
     612:	b6 01       	movw	r22, r12
     614:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     618:	5c 01       	movw	r10, r24
     61a:	ad 81       	ldd	r26, Y+5	; 0x05
     61c:	be 81       	ldd	r27, Y+6	; 0x06
     61e:	13 96       	adiw	r26, 0x03	; 3
     620:	8c 93       	st	X, r24
	floats[2] = ( ((int)number)%100 - ((int)number)%10 )/10;
     622:	c9 01       	movw	r24, r18
     624:	b7 01       	movw	r22, r14
     626:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     62a:	fc 01       	movw	r30, r24
     62c:	8a 19       	sub	r24, r10
     62e:	9b 09       	sbc	r25, r11
     630:	b6 01       	movw	r22, r12
     632:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     636:	ad 81       	ldd	r26, Y+5	; 0x05
     638:	be 81       	ldd	r27, Y+6	; 0x06
     63a:	12 96       	adiw	r26, 0x02	; 2
     63c:	6c 93       	st	X, r22
	floats[1] = ( ((int)number)%1000 - ((int)number)%100 )/100;
     63e:	c9 01       	movw	r24, r18
     640:	b1 01       	movw	r22, r2
     642:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     646:	6c 01       	movw	r12, r24
     648:	8e 1b       	sub	r24, r30
     64a:	9f 0b       	sbc	r25, r31
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     652:	ed 81       	ldd	r30, Y+5	; 0x05
     654:	fe 81       	ldd	r31, Y+6	; 0x06
     656:	61 83       	std	Z+1, r22	; 0x01
	floats[0] = ( ((int)number)%10000 - ((int)number)%1000 )/1000;
     658:	c9 01       	movw	r24, r18
     65a:	b4 01       	movw	r22, r8
     65c:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     660:	8c 19       	sub	r24, r12
     662:	9d 09       	sbc	r25, r13
     664:	b1 01       	movw	r22, r2
     666:	0e 94 5f 0a 	call	0x14be	; 0x14be <__divmodhi4>
     66a:	60 83       	st	Z, r22
	
	for (int i=0;i<4;i++)
     66c:	e1 2c       	mov	r14, r1
     66e:	f1 2c       	mov	r15, r1
     670:	0c c0       	rjmp	.+24     	; 0x68a <double2string+0x172>
	{
		prints_int(integers[i],1);
     672:	f8 01       	movw	r30, r16
     674:	ee 0d       	add	r30, r14
     676:	ff 1d       	adc	r31, r15
     678:	80 81       	ld	r24, Z
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
	floats[3] = (  (int)number)%10;
	floats[2] = ( ((int)number)%100 - ((int)number)%10 )/10;
	floats[1] = ( ((int)number)%1000 - ((int)number)%100 )/100;
	floats[0] = ( ((int)number)%10000 - ((int)number)%1000 )/1000;
	
	for (int i=0;i<4;i++)
     684:	ff ef       	ldi	r31, 0xFF	; 255
     686:	ef 1a       	sub	r14, r31
     688:	ff 0a       	sbc	r15, r31
     68a:	84 e0       	ldi	r24, 0x04	; 4
     68c:	e8 16       	cp	r14, r24
     68e:	f1 04       	cpc	r15, r1
     690:	84 f3       	brlt	.-32     	; 0x672 <double2string+0x15a>
	{
		prints_int(integers[i],1);
	}
	prints_String(".",1);
     692:	61 e0       	ldi	r22, 0x01	; 1
     694:	70 e0       	ldi	r23, 0x00	; 0
     696:	8b e4       	ldi	r24, 0x4B	; 75
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	for (int i=0;i<4;i++)
     69e:	00 e0       	ldi	r16, 0x00	; 0
     6a0:	10 e0       	ldi	r17, 0x00	; 0
     6a2:	0c c0       	rjmp	.+24     	; 0x6bc <double2string+0x1a4>
	{
		prints_int(floats[i],1);
     6a4:	ed 81       	ldd	r30, Y+5	; 0x05
     6a6:	fe 81       	ldd	r31, Y+6	; 0x06
     6a8:	e0 0f       	add	r30, r16
     6aa:	f1 1f       	adc	r31, r17
     6ac:	80 81       	ld	r24, Z
     6ae:	61 e0       	ldi	r22, 0x01	; 1
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
	for (int i=0;i<4;i++)
	{
		prints_int(integers[i],1);
	}
	prints_String(".",1);
	for (int i=0;i<4;i++)
     6b8:	0f 5f       	subi	r16, 0xFF	; 255
     6ba:	1f 4f       	sbci	r17, 0xFF	; 255
     6bc:	04 30       	cpi	r16, 0x04	; 4
     6be:	11 05       	cpc	r17, r1
     6c0:	8c f3       	brlt	.-30     	; 0x6a4 <double2string+0x18c>
	{
		prints_int(floats[i],1);
	}
	
}
     6c2:	26 96       	adiw	r28, 0x06	; 6
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	cd bf       	out	0x3d, r28	; 61
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	ff 90       	pop	r15
     6d8:	ef 90       	pop	r14
     6da:	df 90       	pop	r13
     6dc:	cf 90       	pop	r12
     6de:	bf 90       	pop	r11
     6e0:	af 90       	pop	r10
     6e2:	9f 90       	pop	r9
     6e4:	8f 90       	pop	r8
     6e6:	7f 90       	pop	r7
     6e8:	6f 90       	pop	r6
     6ea:	5f 90       	pop	r5
     6ec:	4f 90       	pop	r4
     6ee:	3f 90       	pop	r3
     6f0:	2f 90       	pop	r2
     6f2:	08 95       	ret

000006f4 <print_q>:
        } 		

	}
}

void print_q(){
     6f4:	0f 93       	push	r16
     6f6:	1f 93       	push	r17
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
	PORTC=0x01; // for buzzer indication start 
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	88 b9       	out	0x08, r24	; 8
     700:	2f e3       	ldi	r18, 0x3F	; 63
     702:	8d e0       	ldi	r24, 0x0D	; 13
     704:	93 e0       	ldi	r25, 0x03	; 3
     706:	21 50       	subi	r18, 0x01	; 1
     708:	80 40       	sbci	r24, 0x00	; 0
     70a:	90 40       	sbci	r25, 0x00	; 0
     70c:	e1 f7       	brne	.-8      	; 0x706 <print_q+0x12>
     70e:	00 c0       	rjmp	.+0      	; 0x710 <print_q+0x1c>
     710:	00 00       	nop
	_delay_ms(1000);
	PORTC=0x00; // for buzzer indication stop
     712:	18 b8       	out	0x08, r1	; 8
	prints_String("\n",2);
     714:	62 e0       	ldi	r22, 0x02	; 2
     716:	70 e0       	ldi	r23, 0x00	; 0
     718:	8d e4       	ldi	r24, 0x4D	; 77
     71a:	91 e0       	ldi	r25, 0x01	; 1
     71c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("-------------------------------",30);
     720:	6e e1       	ldi	r22, 0x1E	; 30
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	8f e4       	ldi	r24, 0x4F	; 79
     726:	91 e0       	ldi	r25, 0x01	; 1
     728:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("\n",2);
     72c:	62 e0       	ldi	r22, 0x02	; 2
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	8d e4       	ldi	r24, 0x4D	; 77
     732:	91 e0       	ldi	r25, 0x01	; 1
     734:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("--TrainingFinsihStartTesting--",30);
     738:	6e e1       	ldi	r22, 0x1E	; 30
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	8f e6       	ldi	r24, 0x6F	; 111
     73e:	91 e0       	ldi	r25, 0x01	; 1
     740:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("\n",2);
     744:	62 e0       	ldi	r22, 0x02	; 2
     746:	70 e0       	ldi	r23, 0x00	; 0
     748:	8d e4       	ldi	r24, 0x4D	; 77
     74a:	91 e0       	ldi	r25, 0x01	; 1
     74c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("-------------------------------",30);
     750:	6e e1       	ldi	r22, 0x1E	; 30
     752:	70 e0       	ldi	r23, 0x00	; 0
     754:	8f e4       	ldi	r24, 0x4F	; 79
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("\n",2);
     75c:	62 e0       	ldi	r22, 0x02	; 2
     75e:	70 e0       	ldi	r23, 0x00	; 0
     760:	8d e4       	ldi	r24, 0x4D	; 77
     762:	91 e0       	ldi	r25, 0x01	; 1
     764:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	for(int i=0;i<4;i++){
     768:	00 e0       	ldi	r16, 0x00	; 0
     76a:	10 e0       	ldi	r17, 0x00	; 0
     76c:	43 c0       	rjmp	.+134    	; 0x7f4 <print_q+0x100>
		prints_String("S",1);
     76e:	61 e0       	ldi	r22, 0x01	; 1
     770:	70 e0       	ldi	r23, 0x00	; 0
     772:	8e e8       	ldi	r24, 0x8E	; 142
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
		prints_int(i,1);
     77a:	61 e0       	ldi	r22, 0x01	; 1
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	c8 01       	movw	r24, r16
     780:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
		prints_String("--------------------",21);
     784:	65 e1       	ldi	r22, 0x15	; 21
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	8a e5       	ldi	r24, 0x5A	; 90
     78a:	91 e0       	ldi	r25, 0x01	; 1
     78c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
		prints_String("\n",2);
     790:	62 e0       	ldi	r22, 0x02	; 2
     792:	70 e0       	ldi	r23, 0x00	; 0
     794:	8d e4       	ldi	r24, 0x4D	; 77
     796:	91 e0       	ldi	r25, 0x01	; 1
     798:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
		for(int j=0;j<3;j++){
     79c:	c0 e0       	ldi	r28, 0x00	; 0
     79e:	d0 e0       	ldi	r29, 0x00	; 0
     7a0:	1e c0       	rjmp	.+60     	; 0x7de <print_q+0xea>
			//int temp =(int)Q_Matrix[i][j]*100;
			double2string(Q_Matrix[i][j],integers,floats);
     7a2:	f8 01       	movw	r30, r16
     7a4:	ee 0f       	add	r30, r30
     7a6:	ff 1f       	adc	r31, r31
     7a8:	e0 0f       	add	r30, r16
     7aa:	f1 1f       	adc	r31, r17
     7ac:	ec 0f       	add	r30, r28
     7ae:	fd 1f       	adc	r31, r29
     7b0:	ee 0f       	add	r30, r30
     7b2:	ff 1f       	adc	r31, r31
     7b4:	ee 0f       	add	r30, r30
     7b6:	ff 1f       	adc	r31, r31
     7b8:	ea 5d       	subi	r30, 0xDA	; 218
     7ba:	fd 4f       	sbci	r31, 0xFD	; 253
     7bc:	60 81       	ld	r22, Z
     7be:	71 81       	ldd	r23, Z+1	; 0x01
     7c0:	82 81       	ldd	r24, Z+2	; 0x02
     7c2:	93 81       	ldd	r25, Z+3	; 0x03
     7c4:	2a e8       	ldi	r18, 0x8A	; 138
     7c6:	32 e0       	ldi	r19, 0x02	; 2
     7c8:	4f e9       	ldi	r20, 0x9F	; 159
     7ca:	52 e0       	ldi	r21, 0x02	; 2
     7cc:	0e 94 8c 02 	call	0x518	; 0x518 <double2string>
			prints_String(" ",1);
     7d0:	61 e0       	ldi	r22, 0x01	; 1
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	80 e9       	ldi	r24, 0x90	; 144
     7d6:	91 e0       	ldi	r25, 0x01	; 1
     7d8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	for(int i=0;i<4;i++){
		prints_String("S",1);
		prints_int(i,1);
		prints_String("--------------------",21);
		prints_String("\n",2);
		for(int j=0;j<3;j++){
     7dc:	21 96       	adiw	r28, 0x01	; 1
     7de:	c3 30       	cpi	r28, 0x03	; 3
     7e0:	d1 05       	cpc	r29, r1
     7e2:	fc f2       	brlt	.-66     	; 0x7a2 <print_q+0xae>
			//int temp =(int)Q_Matrix[i][j]*100;
			double2string(Q_Matrix[i][j],integers,floats);
			prints_String(" ",1);
		}
		prints_String("\n",2);
     7e4:	62 e0       	ldi	r22, 0x02	; 2
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	8d e4       	ldi	r24, 0x4D	; 77
     7ea:	91 e0       	ldi	r25, 0x01	; 1
     7ec:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	prints_String("\n",2);
	prints_String("--TrainingFinsihStartTesting--",30);
	prints_String("\n",2);
	prints_String("-------------------------------",30);
	prints_String("\n",2);
	for(int i=0;i<4;i++){
     7f0:	0f 5f       	subi	r16, 0xFF	; 255
     7f2:	1f 4f       	sbci	r17, 0xFF	; 255
     7f4:	04 30       	cpi	r16, 0x04	; 4
     7f6:	11 05       	cpc	r17, r1
     7f8:	0c f4       	brge	.+2      	; 0x7fc <print_q+0x108>
     7fa:	b9 cf       	rjmp	.-142    	; 0x76e <print_q+0x7a>
			double2string(Q_Matrix[i][j],integers,floats);
			prints_String(" ",1);
		}
		prints_String("\n",2);
	 }
	}	
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	0f 91       	pop	r16
     804:	08 95       	ret

00000806 <Action_Done>:
	
	
	
void Action_Done(int action){
	
	if(action==0)
     806:	00 97       	sbiw	r24, 0x00	; 0
     808:	19 f4       	brne	.+6      	; 0x810 <Action_Done+0xa>
	{
	    Move_Forward();
     80a:	0e 94 07 06 	call	0xc0e	; 0xc0e <Move_Forward>
     80e:	08 95       	ret
	}
	else if (action==1)
     810:	81 30       	cpi	r24, 0x01	; 1
     812:	91 05       	cpc	r25, r1
     814:	19 f4       	brne	.+6      	; 0x81c <Action_Done+0x16>
	{
	   	Move_Left();
     816:	0e 94 f5 05 	call	0xbea	; 0xbea <Move_Left>
     81a:	08 95       	ret
	}
	else if (action==2)
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	91 05       	cpc	r25, r1
     820:	19 f4       	brne	.+6      	; 0x828 <Action_Done+0x22>
	{
		Move_Right();
     822:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <Move_Right>
     826:	08 95       	ret
	}
	else if (action==3)
     828:	03 97       	sbiw	r24, 0x03	; 3
     82a:	11 f4       	brne	.+4      	; 0x830 <Action_Done+0x2a>
	{
		Stop();
     82c:	0e 94 19 06 	call	0xc32	; 0xc32 <Stop>
     830:	08 95       	ret

00000832 <main>:




int main(void)
{   DDRC=0xff;
     832:	8f ef       	ldi	r24, 0xFF	; 255
     834:	87 b9       	out	0x07, r24	; 7
	Pwm_Generation_Left_Intilaization();
     836:	0e 94 87 05 	call	0xb0e	; 0xb0e <Pwm_Generation_Left_Intilaization>
	Pwm_Generation_Right_Intilaization();
     83a:	0e 94 7d 05 	call	0xafa	; 0xafa <Pwm_Generation_Right_Intilaization>
	ultrasonic_init_1();
     83e:	0e 94 3a 06 	call	0xc74	; 0xc74 <ultrasonic_init_1>
	ultrasonic_init_2();
     842:	0e 94 4e 06 	call	0xc9c	; 0xc9c <ultrasonic_init_2>
	Move_Intilaization();
     846:	0e 94 b1 05 	call	0xb62	; 0xb62 <Move_Intilaization>
	Serial_monitor_int();
     84a:	0e 94 53 00 	call	0xa6	; 0xa6 <Serial_monitor_int>
	sei();
     84e:	78 94       	sei
	seed_init();
     850:	0e 94 1f 02 	call	0x43e	; 0x43e <seed_init>
	int episode_count=100;
	double2string(100.123,integers,floats);
     854:	2a e8       	ldi	r18, 0x8A	; 138
     856:	32 e0       	ldi	r19, 0x02	; 2
     858:	4f e9       	ldi	r20, 0x9F	; 159
     85a:	52 e0       	ldi	r21, 0x02	; 2
     85c:	6a ef       	ldi	r22, 0xFA	; 250
     85e:	7e e3       	ldi	r23, 0x3E	; 62
     860:	88 ec       	ldi	r24, 0xC8	; 200
     862:	92 e4       	ldi	r25, 0x42	; 66
     864:	0e 94 8c 02 	call	0x518	; 0x518 <double2string>
	prints_String("\n",2);
     868:	62 e0       	ldi	r22, 0x02	; 2
     86a:	70 e0       	ldi	r23, 0x00	; 0
     86c:	8d e4       	ldi	r24, 0x4D	; 77
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
    while (1) 
    {  
		 
		 //ftoa(110.25,distance_str_1,2);
		 ///////////////////training/////////////////////////////////////////////
 		for(int episodes=0;episodes<episode_count;episodes++) 
     874:	61 2c       	mov	r6, r1
     876:	71 2c       	mov	r7, r1
     878:	19 c1       	rjmp	.+562    	; 0xaac <__stack+0x1ad>
 		{   
		   //Print Number Of episode 
			prints_String("------------------------Episode=",28);
     87a:	6c e1       	ldi	r22, 0x1C	; 28
     87c:	70 e0       	ldi	r23, 0x00	; 0
     87e:	82 e9       	ldi	r24, 0x92	; 146
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			prints_int(episodes,2);
     886:	62 e0       	ldi	r22, 0x02	; 2
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	c3 01       	movw	r24, r6
     88c:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
			prints_String("\n",2);
     890:	62 e0       	ldi	r22, 0x02	; 2
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	8d e4       	ldi	r24, 0x4D	; 77
     896:	91 e0       	ldi	r25, 0x01	; 1
     898:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			/// get current state and print
			int state;
			state=sensor_reading(); // 01
     89c:	0e 94 a2 00 	call	0x144	; 0x144 <sensor_reading>
     8a0:	ec 01       	movw	r28, r24
			prints_String("State=",6);
     8a2:	66 e0       	ldi	r22, 0x06	; 6
     8a4:	70 e0       	ldi	r23, 0x00	; 0
     8a6:	8f e1       	ldi	r24, 0x1F	; 31
     8a8:	92 e0       	ldi	r25, 0x02	; 2
     8aa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			prints_int(state,1);
     8ae:	61 e0       	ldi	r22, 0x01	; 1
     8b0:	70 e0       	ldi	r23, 0x00	; 0
     8b2:	ce 01       	movw	r24, r28
     8b4:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
			prints_String("\n",2);
     8b8:	62 e0       	ldi	r22, 0x02	; 2
     8ba:	70 e0       	ldi	r23, 0x00	; 0
     8bc:	8d e4       	ldi	r24, 0x4D	; 77
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			//choose Explore or exploit and print the states
 			if(Explore_Exploit()==true){
     8c4:	0e 94 79 00 	call	0xf2	; 0xf2 <Explore_Exploit>
     8c8:	88 23       	and	r24, r24
     8ca:	39 f1       	breq	.+78     	; 0x91a <__stack+0x1b>
				  prints_String("EXPLORE----------",17);
     8cc:	61 e1       	ldi	r22, 0x11	; 17
     8ce:	70 e0       	ldi	r23, 0x00	; 0
     8d0:	83 eb       	ldi	r24, 0xB3	; 179
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  prints_String("\n",2);
     8d8:	62 e0       	ldi	r22, 0x02	; 2
     8da:	70 e0       	ldi	r23, 0x00	; 0
     8dc:	8d e4       	ldi	r24, 0x4D	; 77
     8de:	91 e0       	ldi	r25, 0x01	; 1
     8e0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  action_taken=rand_Action();
     8e4:	0e 94 9b 00 	call	0x136	; 0x136 <rand_Action>
     8e8:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <action_taken+0x1>
     8ec:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <action_taken>
				  prints_String("ActionTaken=",12);
     8f0:	6c e0       	ldi	r22, 0x0C	; 12
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	85 ec       	ldi	r24, 0xC5	; 197
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  prints_int(action_taken,1);
     8fc:	61 e0       	ldi	r22, 0x01	; 1
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <action_taken>
     904:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <action_taken+0x1>
     908:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
				  prints_String("\n",2);
     90c:	62 e0       	ldi	r22, 0x02	; 2
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	8d e4       	ldi	r24, 0x4D	; 77
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
     918:	2f c0       	rjmp	.+94     	; 0x978 <__stack+0x79>
				  }
			 else { 
				  prints_String("EXPLOIT----------",17);
     91a:	61 e1       	ldi	r22, 0x11	; 17
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	82 ed       	ldi	r24, 0xD2	; 210
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  prints_String("\n",2);
     926:	62 e0       	ldi	r22, 0x02	; 2
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	8d e4       	ldi	r24, 0x4D	; 77
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  action_taken=rand_Action();
     932:	0e 94 9b 00 	call	0x136	; 0x136 <rand_Action>
     936:	90 93 8c 02 	sts	0x028C, r25	; 0x80028c <action_taken+0x1>
     93a:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <action_taken>
				  action_taken=MAX_Action_InState(state);
     93e:	ce 01       	movw	r24, r28
     940:	0e 94 9e 01 	call	0x33c	; 0x33c <MAX_Action_InState>
     944:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fixsfsi>
     948:	70 93 8c 02 	sts	0x028C, r23	; 0x80028c <action_taken+0x1>
     94c:	60 93 8b 02 	sts	0x028B, r22	; 0x80028b <action_taken>
				  prints_String("ActionTaken=",12);
     950:	6c e0       	ldi	r22, 0x0C	; 12
     952:	70 e0       	ldi	r23, 0x00	; 0
     954:	85 ec       	ldi	r24, 0xC5	; 197
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  prints_int(action_taken,1);
     95c:	61 e0       	ldi	r22, 0x01	; 1
     95e:	70 e0       	ldi	r23, 0x00	; 0
     960:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <action_taken>
     964:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <action_taken+0x1>
     968:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
				  prints_String("\n",2);
     96c:	62 e0       	ldi	r22, 0x02	; 2
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	8d e4       	ldi	r24, 0x4D	; 77
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				   }
             do{
				  prints_String("INWHILE----------",17);
     978:	61 e1       	ldi	r22, 0x11	; 17
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	84 ee       	ldi	r24, 0xE4	; 228
     97e:	91 e0       	ldi	r25, 0x01	; 1
     980:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				  prints_String("\n",2);
     984:	62 e0       	ldi	r22, 0x02	; 2
     986:	70 e0       	ldi	r23, 0x00	; 0
     988:	8d e4       	ldi	r24, 0x4D	; 77
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
	              Action_Done(action_taken);
     990:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <action_taken>
     994:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <action_taken+0x1>
     998:	0e 94 03 04 	call	0x806	; 0x806 <Action_Done>
				prints_String("ActionTaken=",12);
     99c:	6c e0       	ldi	r22, 0x0C	; 12
     99e:	70 e0       	ldi	r23, 0x00	; 0
     9a0:	85 ec       	ldi	r24, 0xC5	; 197
     9a2:	91 e0       	ldi	r25, 0x01	; 1
     9a4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
				prints_int(action_taken,1);
     9a8:	61 e0       	ldi	r22, 0x01	; 1
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	80 91 8b 02 	lds	r24, 0x028B	; 0x80028b <action_taken>
     9b0:	90 91 8c 02 	lds	r25, 0x028C	; 0x80028c <action_taken+0x1>
     9b4:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
				prints_String("\n",2);
     9b8:	62 e0       	ldi	r22, 0x02	; 2
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	8d e4       	ldi	r24, 0x4D	; 77
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
             }while(sensor_reading()==state);
     9c4:	0e 94 a2 00 	call	0x144	; 0x144 <sensor_reading>
     9c8:	c8 17       	cp	r28, r24
     9ca:	d9 07       	cpc	r29, r25
     9cc:	a9 f2       	breq	.-86     	; 0x978 <__stack+0x79>
			 prints_String("OUTWHILE----------",18);
     9ce:	62 e1       	ldi	r22, 0x12	; 18
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	86 ef       	ldi	r24, 0xF6	; 246
     9d4:	91 e0       	ldi	r25, 0x01	; 1
     9d6:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			 prints_String("\n",2);
     9da:	62 e0       	ldi	r22, 0x02	; 2
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	8d e4       	ldi	r24, 0x4D	; 77
     9e0:	91 e0       	ldi	r25, 0x01	; 1
     9e2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
             Action_Done(4);
     9e6:	84 e0       	ldi	r24, 0x04	; 4
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	0e 94 03 04 	call	0x806	; 0x806 <Action_Done>
			 prints_String("STOPPPPP----------",18);
     9ee:	62 e1       	ldi	r22, 0x12	; 18
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	89 e0       	ldi	r24, 0x09	; 9
     9f4:	92 e0       	ldi	r25, 0x02	; 2
     9f6:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			 prints_String("\n",2);
     9fa:	62 e0       	ldi	r22, 0x02	; 2
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	8d e4       	ldi	r24, 0x4D	; 77
     a00:	91 e0       	ldi	r25, 0x01	; 1
     a02:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
             Next_state=sensor_reading();// 11
     a06:	0e 94 a2 00 	call	0x144	; 0x144 <sensor_reading>
     a0a:	90 93 92 02 	sts	0x0292, r25	; 0x800292 <Next_state+0x1>
     a0e:	80 93 91 02 	sts	0x0291, r24	; 0x800291 <Next_state>
			 prints_String("NEWState=",9);
     a12:	69 e0       	ldi	r22, 0x09	; 9
     a14:	70 e0       	ldi	r23, 0x00	; 0
     a16:	8c e1       	ldi	r24, 0x1C	; 28
     a18:	92 e0       	ldi	r25, 0x02	; 2
     a1a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
			 prints_int(Next_state,1);
     a1e:	61 e0       	ldi	r22, 0x01	; 1
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <Next_state>
     a26:	90 91 92 02 	lds	r25, 0x0292	; 0x800292 <Next_state+0x1>
     a2a:	0e 94 3b 02 	call	0x476	; 0x476 <prints_int>
			 prints_String("\n",2);
     a2e:	62 e0       	ldi	r22, 0x02	; 2
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	8d e4       	ldi	r24, 0x4D	; 77
     a34:	91 e0       	ldi	r25, 0x01	; 1
     a36:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <prints_String>
             Reward_gain=Reward_Martix[state][action_taken];//00 f r=10
     a3a:	40 91 8b 02 	lds	r20, 0x028B	; 0x80028b <action_taken>
     a3e:	50 91 8c 02 	lds	r21, 0x028C	; 0x80028c <action_taken+0x1>
     a42:	fe 01       	movw	r30, r28
     a44:	ee 0f       	add	r30, r30
     a46:	ff 1f       	adc	r31, r31
     a48:	ec 0f       	add	r30, r28
     a4a:	fd 1f       	adc	r31, r29
     a4c:	e4 0f       	add	r30, r20
     a4e:	f5 1f       	adc	r31, r21
     a50:	ee 0f       	add	r30, r30
     a52:	ff 1f       	adc	r31, r31
     a54:	ee 0f       	add	r30, r30
     a56:	ff 1f       	adc	r31, r31
     a58:	ec 5f       	subi	r30, 0xFC	; 252
     a5a:	fe 4f       	sbci	r31, 0xFE	; 254
     a5c:	00 81       	ld	r16, Z
     a5e:	11 81       	ldd	r17, Z+1	; 0x01
     a60:	22 81       	ldd	r18, Z+2	; 0x02
     a62:	33 81       	ldd	r19, Z+3	; 0x03
     a64:	00 93 97 02 	sts	0x0297, r16	; 0x800297 <Reward_gain>
     a68:	10 93 98 02 	sts	0x0298, r17	; 0x800298 <Reward_gain+0x1>
     a6c:	20 93 99 02 	sts	0x0299, r18	; 0x800299 <Reward_gain+0x2>
     a70:	30 93 9a 02 	sts	0x029A, r19	; 0x80029a <Reward_gain+0x3>
             Update(state,Next_state,action_taken,Reward_gain,learning_rate,discount_factor);
     a74:	80 90 34 01 	lds	r8, 0x0134	; 0x800134 <discount_factor>
     a78:	90 90 35 01 	lds	r9, 0x0135	; 0x800135 <discount_factor+0x1>
     a7c:	a0 90 36 01 	lds	r10, 0x0136	; 0x800136 <discount_factor+0x2>
     a80:	b0 90 37 01 	lds	r11, 0x0137	; 0x800137 <discount_factor+0x3>
     a84:	c0 90 38 01 	lds	r12, 0x0138	; 0x800138 <learning_rate>
     a88:	d0 90 39 01 	lds	r13, 0x0139	; 0x800139 <learning_rate+0x1>
     a8c:	e0 90 3a 01 	lds	r14, 0x013A	; 0x80013a <learning_rate+0x2>
     a90:	f0 90 3b 01 	lds	r15, 0x013B	; 0x80013b <learning_rate+0x3>
     a94:	60 91 91 02 	lds	r22, 0x0291	; 0x800291 <Next_state>
     a98:	70 91 92 02 	lds	r23, 0x0292	; 0x800292 <Next_state+0x1>
     a9c:	ce 01       	movw	r24, r28
     a9e:	0e 94 0b 01 	call	0x216	; 0x216 <Update>
             update_epsilon();
     aa2:	0e 94 62 00 	call	0xc4	; 0xc4 <update_epsilon>
    while (1) 
    {  
		 
		 //ftoa(110.25,distance_str_1,2);
		 ///////////////////training/////////////////////////////////////////////
 		for(int episodes=0;episodes<episode_count;episodes++) 
     aa6:	8f ef       	ldi	r24, 0xFF	; 255
     aa8:	68 1a       	sub	r6, r24
     aaa:	78 0a       	sbc	r7, r24
     aac:	84 e6       	ldi	r24, 0x64	; 100
     aae:	68 16       	cp	r6, r24
     ab0:	71 04       	cpc	r7, r1
     ab2:	0c f4       	brge	.+2      	; 0xab6 <__stack+0x1b7>
     ab4:	e2 ce       	rjmp	.-572    	; 0x87a <main+0x48>
             Reward_gain=Reward_Martix[state][action_taken];//00 f r=10
             Update(state,Next_state,action_taken,Reward_gain,learning_rate,discount_factor);
             update_epsilon();
			 
 		}
		print_q();
     ab6:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <print_q>
		Serial_print('\n');
     aba:	8a e0       	ldi	r24, 0x0A	; 10
     abc:	0e 94 5f 00 	call	0xbe	; 0xbe <Serial_print>
		
		///////////////////testing/////////////////////////////////////////////
	while(1){
	     	Serial_print('\n');
     ac0:	8a e0       	ldi	r24, 0x0A	; 10
     ac2:	0e 94 5f 00 	call	0xbe	; 0xbe <Serial_print>
		    Serial_print('\n');
     ac6:	8a e0       	ldi	r24, 0x0A	; 10
     ac8:	0e 94 5f 00 	call	0xbe	; 0xbe <Serial_print>
			int state;
			state=sensor_reading();
     acc:	0e 94 a2 00 	call	0x144	; 0x144 <sensor_reading>
     ad0:	ec 01       	movw	r28, r24
			do{
			    action_taken=MAX_Action_InState(state);
     ad2:	ce 01       	movw	r24, r28
     ad4:	0e 94 9e 01 	call	0x33c	; 0x33c <MAX_Action_InState>
     ad8:	0e 94 0a 09 	call	0x1214	; 0x1214 <__fixsfsi>
     adc:	70 93 8c 02 	sts	0x028C, r23	; 0x80028c <action_taken+0x1>
     ae0:	60 93 8b 02 	sts	0x028B, r22	; 0x80028b <action_taken>
				Action_Done(action_taken);
     ae4:	cb 01       	movw	r24, r22
     ae6:	0e 94 03 04 	call	0x806	; 0x806 <Action_Done>
			}while(sensor_reading()==state);
     aea:	0e 94 a2 00 	call	0x144	; 0x144 <sensor_reading>
     aee:	c8 17       	cp	r28, r24
     af0:	d9 07       	cpc	r29, r25
     af2:	79 f3       	breq	.-34     	; 0xad2 <__stack+0x1d3>
			Stop();//stop car
     af4:	0e 94 19 06 	call	0xc32	; 0xc32 <Stop>
        } 		
     af8:	e3 cf       	rjmp	.-58     	; 0xac0 <__stack+0x1c1>

00000afa <Pwm_Generation_Right_Intilaization>:
	Move_Car(4,0);
}
void Move_Backward(){
	Move_Car(1,55);
	_delay_ms(2000);
	Move_Car(4,0);
     afa:	8a b1       	in	r24, 0x0a	; 10
     afc:	80 64       	ori	r24, 0x40	; 64
     afe:	8a b9       	out	0x0a, r24	; 10
     b00:	84 b5       	in	r24, 0x24	; 36
     b02:	83 68       	ori	r24, 0x83	; 131
     b04:	84 bd       	out	0x24, r24	; 36
     b06:	85 b5       	in	r24, 0x25	; 37
     b08:	81 60       	ori	r24, 0x01	; 1
     b0a:	85 bd       	out	0x25, r24	; 37
     b0c:	08 95       	ret

00000b0e <Pwm_Generation_Left_Intilaization>:
     b0e:	8a b1       	in	r24, 0x0a	; 10
     b10:	80 62       	ori	r24, 0x20	; 32
     b12:	8a b9       	out	0x0a, r24	; 10
     b14:	84 b5       	in	r24, 0x24	; 36
     b16:	83 62       	ori	r24, 0x23	; 35
     b18:	84 bd       	out	0x24, r24	; 36
     b1a:	85 b5       	in	r24, 0x25	; 37
     b1c:	81 60       	ori	r24, 0x01	; 1
     b1e:	85 bd       	out	0x25, r24	; 37
     b20:	08 95       	ret

00000b22 <Pwm_Generation_Right>:
     b22:	68 2f       	mov	r22, r24
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
     b2e:	23 e3       	ldi	r18, 0x33	; 51
     b30:	33 e3       	ldi	r19, 0x33	; 51
     b32:	43 e2       	ldi	r20, 0x23	; 35
     b34:	50 e4       	ldi	r21, 0x40	; 64
     b36:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>
     b3a:	0e 94 11 09 	call	0x1222	; 0x1222 <__fixunssfsi>
     b3e:	67 bd       	out	0x27, r22	; 39
     b40:	08 95       	ret

00000b42 <Pwm_Generation_Left>:
     b42:	68 2f       	mov	r22, r24
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	0e 94 42 09 	call	0x1284	; 0x1284 <__floatsisf>
     b4e:	23 e3       	ldi	r18, 0x33	; 51
     b50:	33 e3       	ldi	r19, 0x33	; 51
     b52:	43 e2       	ldi	r20, 0x23	; 35
     b54:	50 e4       	ldi	r21, 0x40	; 64
     b56:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__mulsf3>
     b5a:	0e 94 11 09 	call	0x1222	; 0x1222 <__fixunssfsi>
     b5e:	68 bd       	out	0x28, r22	; 40
     b60:	08 95       	ret

00000b62 <Move_Intilaization>:
     b62:	84 b1       	in	r24, 0x04	; 4
     b64:	8f 60       	ori	r24, 0x0F	; 15
     b66:	84 b9       	out	0x04, r24	; 4
     b68:	08 95       	ret

00000b6a <Move_Car>:
     b6a:	cf 93       	push	r28
     b6c:	c6 2f       	mov	r28, r22
     b6e:	95 b1       	in	r25, 0x05	; 5
     b70:	90 7f       	andi	r25, 0xF0	; 240
     b72:	e8 2f       	mov	r30, r24
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	e0 5c       	subi	r30, 0xC0	; 192
     b78:	fe 4f       	sbci	r31, 0xFE	; 254
     b7a:	20 81       	ld	r18, Z
     b7c:	92 2b       	or	r25, r18
     b7e:	95 b9       	out	0x05, r25	; 5
     b80:	82 30       	cpi	r24, 0x02	; 2
     b82:	38 f4       	brcc	.+14     	; 0xb92 <Move_Car+0x28>
     b84:	86 2f       	mov	r24, r22
     b86:	0e 94 91 05 	call	0xb22	; 0xb22 <Pwm_Generation_Right>
     b8a:	8c 2f       	mov	r24, r28
     b8c:	0e 94 a1 05 	call	0xb42	; 0xb42 <Pwm_Generation_Left>
     b90:	18 c0       	rjmp	.+48     	; 0xbc2 <Move_Car+0x58>
     b92:	82 30       	cpi	r24, 0x02	; 2
     b94:	39 f4       	brne	.+14     	; 0xba4 <Move_Car+0x3a>
     b96:	86 2f       	mov	r24, r22
     b98:	0e 94 91 05 	call	0xb22	; 0xb22 <Pwm_Generation_Right>
     b9c:	8c 2f       	mov	r24, r28
     b9e:	0e 94 a1 05 	call	0xb42	; 0xb42 <Pwm_Generation_Left>
     ba2:	0f c0       	rjmp	.+30     	; 0xbc2 <Move_Car+0x58>
     ba4:	83 30       	cpi	r24, 0x03	; 3
     ba6:	39 f4       	brne	.+14     	; 0xbb6 <Move_Car+0x4c>
     ba8:	86 2f       	mov	r24, r22
     baa:	0e 94 91 05 	call	0xb22	; 0xb22 <Pwm_Generation_Right>
     bae:	8c 2f       	mov	r24, r28
     bb0:	0e 94 a1 05 	call	0xb42	; 0xb42 <Pwm_Generation_Left>
     bb4:	06 c0       	rjmp	.+12     	; 0xbc2 <Move_Car+0x58>
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	0e 94 91 05 	call	0xb22	; 0xb22 <Pwm_Generation_Right>
     bbc:	80 e0       	ldi	r24, 0x00	; 0
     bbe:	0e 94 a1 05 	call	0xb42	; 0xb42 <Pwm_Generation_Left>
     bc2:	cf 91       	pop	r28
     bc4:	08 95       	ret

00000bc6 <Move_Right>:
     bc6:	67 e3       	ldi	r22, 0x37	; 55
     bc8:	82 e0       	ldi	r24, 0x02	; 2
     bca:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     bce:	2f e7       	ldi	r18, 0x7F	; 127
     bd0:	8a e1       	ldi	r24, 0x1A	; 26
     bd2:	96 e0       	ldi	r25, 0x06	; 6
     bd4:	21 50       	subi	r18, 0x01	; 1
     bd6:	80 40       	sbci	r24, 0x00	; 0
     bd8:	90 40       	sbci	r25, 0x00	; 0
     bda:	e1 f7       	brne	.-8      	; 0xbd4 <Move_Right+0xe>
     bdc:	00 c0       	rjmp	.+0      	; 0xbde <Move_Right+0x18>
     bde:	00 00       	nop
     be0:	60 e0       	ldi	r22, 0x00	; 0
     be2:	84 e0       	ldi	r24, 0x04	; 4
     be4:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     be8:	08 95       	ret

00000bea <Move_Left>:
     bea:	67 e3       	ldi	r22, 0x37	; 55
     bec:	83 e0       	ldi	r24, 0x03	; 3
     bee:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     bf2:	2f e7       	ldi	r18, 0x7F	; 127
     bf4:	8a e1       	ldi	r24, 0x1A	; 26
     bf6:	96 e0       	ldi	r25, 0x06	; 6
     bf8:	21 50       	subi	r18, 0x01	; 1
     bfa:	80 40       	sbci	r24, 0x00	; 0
     bfc:	90 40       	sbci	r25, 0x00	; 0
     bfe:	e1 f7       	brne	.-8      	; 0xbf8 <Move_Left+0xe>
     c00:	00 c0       	rjmp	.+0      	; 0xc02 <Move_Left+0x18>
     c02:	00 00       	nop
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	84 e0       	ldi	r24, 0x04	; 4
     c08:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     c0c:	08 95       	ret

00000c0e <Move_Forward>:
     c0e:	67 e3       	ldi	r22, 0x37	; 55
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     c16:	2f e7       	ldi	r18, 0x7F	; 127
     c18:	8a e1       	ldi	r24, 0x1A	; 26
     c1a:	96 e0       	ldi	r25, 0x06	; 6
     c1c:	21 50       	subi	r18, 0x01	; 1
     c1e:	80 40       	sbci	r24, 0x00	; 0
     c20:	90 40       	sbci	r25, 0x00	; 0
     c22:	e1 f7       	brne	.-8      	; 0xc1c <Move_Forward+0xe>
     c24:	00 c0       	rjmp	.+0      	; 0xc26 <Move_Forward+0x18>
     c26:	00 00       	nop
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	84 e0       	ldi	r24, 0x04	; 4
     c2c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     c30:	08 95       	ret

00000c32 <Stop>:
}
void Stop()
{
   Move_Car(4,0);
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	84 e0       	ldi	r24, 0x04	; 4
     c36:	0e 94 b5 05 	call	0xb6a	; 0xb6a <Move_Car>
     c3a:	08 95       	ret

00000c3c <timer0_init>:
volatile uint32_t distance_2;

void timer0_init(void)
{
	/* Disable Timer 0 */
	TCCR1A = DISABLE_MODULE_VALUE;
     c3c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	/* Setting pre scaler */
	TCCR1B = (PRESCLR1_VALUE);
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	/* Initializing the timer with zero */
	TCNT1 = 0x00;
     c46:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     c4a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	/* Timer overflow interrupt enable*/
	TIMSK1 |=(1<<TOIE1);
     c4e:	ef e6       	ldi	r30, 0x6F	; 111
     c50:	f0 e0       	ldi	r31, 0x00	; 0
     c52:	80 81       	ld	r24, Z
     c54:	81 60       	ori	r24, 0x01	; 1
     c56:	80 83       	st	Z, r24
     c58:	08 95       	ret

00000c5a <timer2_init>:
}

void timer2_init(void)
{
	/* Disable Timer 0 */
	TCCR2A = DISABLE_MODULE_VALUE;
     c5a:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	/* Setting pre scaler */
	TCCR2B = (PRESCLR1_VALUE);
     c5e:	81 e0       	ldi	r24, 0x01	; 1
     c60:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	/* Initializing the timer with zero */
	TCNT2 = 0x00;
     c64:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
	/* Timer overflow interrupt enable*/
	TIMSK2 |=(1<<TOIE2);
     c68:	e0 e7       	ldi	r30, 0x70	; 112
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	81 60       	ori	r24, 0x01	; 1
     c70:	80 83       	st	Z, r24
     c72:	08 95       	ret

00000c74 <ultrasonic_init_1>:
}


void ultrasonic_init_1(void){

	TRIGER_DDR_1|=(1<<TRIGER1);
     c74:	84 b1       	in	r24, 0x04	; 4
     c76:	80 62       	ori	r24, 0x20	; 32
     c78:	84 b9       	out	0x04, r24	; 4
	ECHO_DDR_1&=~(1<<ECHO1);
     c7a:	8a b1       	in	r24, 0x0a	; 10
     c7c:	8b 7f       	andi	r24, 0xFB	; 251
     c7e:	8a b9       	out	0x0a, r24	; 10
	ECHO_PULLUP_1|=(1<<ECHO1);
     c80:	8b b1       	in	r24, 0x0b	; 11
     c82:	84 60       	ori	r24, 0x04	; 4
     c84:	8b b9       	out	0x0b, r24	; 11
	EICRA |= (1<<ISC00);		// Trigger INT1,INT0 on any logic change.
     c86:	e9 e6       	ldi	r30, 0x69	; 105
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 81       	ld	r24, Z
     c8c:	81 60       	ori	r24, 0x01	; 1
     c8e:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0);			// Enable INT1,INT0 interrupts.
     c90:	8d b3       	in	r24, 0x1d	; 29
     c92:	81 60       	ori	r24, 0x01	; 1
     c94:	8d bb       	out	0x1d, r24	; 29
	timer0_init();
     c96:	0e 94 1e 06 	call	0xc3c	; 0xc3c <timer0_init>
     c9a:	08 95       	ret

00000c9c <ultrasonic_init_2>:
	return;
}

void ultrasonic_init_2(void){

	TRIGER_DDR_2|=(1<<TRIGER2);
     c9c:	84 b1       	in	r24, 0x04	; 4
     c9e:	80 61       	ori	r24, 0x10	; 16
     ca0:	84 b9       	out	0x04, r24	; 4
	ECHO_DDR_2&=~(1<<ECHO2);
     ca2:	8a b1       	in	r24, 0x0a	; 10
     ca4:	87 7f       	andi	r24, 0xF7	; 247
     ca6:	8a b9       	out	0x0a, r24	; 10
	ECHO_PULLUP_2|=(1<<ECHO2);
     ca8:	8b b1       	in	r24, 0x0b	; 11
     caa:	88 60       	ori	r24, 0x08	; 8
     cac:	8b b9       	out	0x0b, r24	; 11
	EICRA |= (1<<ISC10);		// Trigger INT1,INT0 on any logic change.
     cae:	e9 e6       	ldi	r30, 0x69	; 105
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	80 81       	ld	r24, Z
     cb4:	84 60       	ori	r24, 0x04	; 4
     cb6:	80 83       	st	Z, r24
	EIMSK |= (1<<INT1);			// Enable INT1,INT0 interrupts.
     cb8:	8d b3       	in	r24, 0x1d	; 29
     cba:	82 60       	ori	r24, 0x02	; 2
     cbc:	8d bb       	out	0x1d, r24	; 29
	timer2_init();
     cbe:	0e 94 2d 06 	call	0xc5a	; 0xc5a <timer2_init>
     cc2:	08 95       	ret

00000cc4 <ultra_triger_1>:
	return;
}


void ultra_triger_1(void){
	if(!sensor_working_1){
     cc4:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <sensor_working_1>
     cc8:	81 11       	cpse	r24, r1
     cca:	0c c0       	rjmp	.+24     	; 0xce4 <ultra_triger_1+0x20>
		TRIGER_PORT_1|=(1<<TRIGER1);
     ccc:	85 b1       	in	r24, 0x05	; 5
     cce:	80 62       	ori	r24, 0x20	; 32
     cd0:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cd2:	80 e5       	ldi	r24, 0x50	; 80
     cd4:	8a 95       	dec	r24
     cd6:	f1 f7       	brne	.-4      	; 0xcd4 <ultra_triger_1+0x10>
		_delay_us(15);
		TRIGER_PORT_1&=~(1<<TRIGER1);
     cd8:	85 b1       	in	r24, 0x05	; 5
     cda:	8f 7d       	andi	r24, 0xDF	; 223
     cdc:	85 b9       	out	0x05, r24	; 5
		sensor_working_1=1;
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	80 93 61 02 	sts	0x0261, r24	; 0x800261 <sensor_working_1>
     ce4:	08 95       	ret

00000ce6 <ultra_triger_2>:
	}
}
void ultra_triger_2(void){
	if(!sensor_working_2){
     ce6:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <sensor_working_2>
     cea:	81 11       	cpse	r24, r1
     cec:	0c c0       	rjmp	.+24     	; 0xd06 <ultra_triger_2+0x20>
		TRIGER_PORT_2|=(1<<TRIGER2);
     cee:	85 b1       	in	r24, 0x05	; 5
     cf0:	80 61       	ori	r24, 0x10	; 16
     cf2:	85 b9       	out	0x05, r24	; 5
     cf4:	80 e5       	ldi	r24, 0x50	; 80
     cf6:	8a 95       	dec	r24
     cf8:	f1 f7       	brne	.-4      	; 0xcf6 <ultra_triger_2+0x10>
		_delay_us(15);
		TRIGER_PORT_2&=~(1<<TRIGER2);
     cfa:	85 b1       	in	r24, 0x05	; 5
     cfc:	8f 7e       	andi	r24, 0xEF	; 239
     cfe:	85 b9       	out	0x05, r24	; 5
		sensor_working_2=1;
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <sensor_working_2>
     d06:	08 95       	ret

00000d08 <__vector_1>:
	}
}

ISR(INT0_vect){
     d08:	1f 92       	push	r1
     d0a:	0f 92       	push	r0
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	0f 92       	push	r0
     d10:	11 24       	eor	r1, r1
     d12:	2f 93       	push	r18
     d14:	3f 93       	push	r19
     d16:	4f 93       	push	r20
     d18:	5f 93       	push	r21
     d1a:	6f 93       	push	r22
     d1c:	7f 93       	push	r23
     d1e:	8f 93       	push	r24
     d20:	9f 93       	push	r25
     d22:	af 93       	push	r26
     d24:	bf 93       	push	r27
     d26:	ef 93       	push	r30
     d28:	ff 93       	push	r31
	
	if(sensor_working_1==1){
     d2a:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <sensor_working_1>
     d2e:	81 30       	cpi	r24, 0x01	; 1
     d30:	09 f0       	breq	.+2      	; 0xd34 <__vector_1+0x2c>
     d32:	45 c0       	rjmp	.+138    	; 0xdbe <__vector_1+0xb6>

		if(rising_edge_1==0){
     d34:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <rising_edge_1>
     d38:	81 11       	cpse	r24, r1
     d3a:	10 c0       	rjmp	.+32     	; 0xd5c <__vector_1+0x54>
			
			TCNT1=0x00;
     d3c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     d40:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
			rising_edge_1=1;
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	80 93 5f 02 	sts	0x025F, r24	; 0x80025f <rising_edge_1>
			timer_counter_1=0;
     d4a:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <timer_counter_1>
     d4e:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <timer_counter_1+0x1>
     d52:	10 92 5c 02 	sts	0x025C, r1	; 0x80025c <timer_counter_1+0x2>
     d56:	10 92 5d 02 	sts	0x025D, r1	; 0x80025d <timer_counter_1+0x3>
     d5a:	31 c0       	rjmp	.+98     	; 0xdbe <__vector_1+0xb6>
		}
		else{
			
			distance_1=(timer_counter_1*65536+TCNT1)/932.8;
     d5c:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <timer_counter_1>
     d60:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <timer_counter_1+0x1>
     d64:	a0 91 5c 02 	lds	r26, 0x025C	; 0x80025c <timer_counter_1+0x2>
     d68:	b0 91 5d 02 	lds	r27, 0x025D	; 0x80025d <timer_counter_1+0x3>
     d6c:	dc 01       	movw	r26, r24
     d6e:	99 27       	eor	r25, r25
     d70:	88 27       	eor	r24, r24
     d72:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
     d76:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     d7a:	bc 01       	movw	r22, r24
     d7c:	cd 01       	movw	r24, r26
     d7e:	62 0f       	add	r22, r18
     d80:	73 1f       	adc	r23, r19
     d82:	81 1d       	adc	r24, r1
     d84:	91 1d       	adc	r25, r1
     d86:	0e 94 40 09 	call	0x1280	; 0x1280 <__floatunsisf>
     d8a:	23 e3       	ldi	r18, 0x33	; 51
     d8c:	33 e3       	ldi	r19, 0x33	; 51
     d8e:	49 e6       	ldi	r20, 0x69	; 105
     d90:	54 e4       	ldi	r21, 0x44	; 68
     d92:	0e 94 98 08 	call	0x1130	; 0x1130 <__divsf3>
     d96:	0e 94 11 09 	call	0x1222	; 0x1222 <__fixunssfsi>
     d9a:	60 93 a4 02 	sts	0x02A4, r22	; 0x8002a4 <distance_1>
     d9e:	70 93 a5 02 	sts	0x02A5, r23	; 0x8002a5 <distance_1+0x1>
     da2:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <distance_1+0x2>
     da6:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <distance_1+0x3>
			timer_counter_1=0;
     daa:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <timer_counter_1>
     dae:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <timer_counter_1+0x1>
     db2:	10 92 5c 02 	sts	0x025C, r1	; 0x80025c <timer_counter_1+0x2>
     db6:	10 92 5d 02 	sts	0x025D, r1	; 0x80025d <timer_counter_1+0x3>
			rising_edge_1=0;
     dba:	10 92 5f 02 	sts	0x025F, r1	; 0x80025f <rising_edge_1>
		}
	}
	
}
     dbe:	ff 91       	pop	r31
     dc0:	ef 91       	pop	r30
     dc2:	bf 91       	pop	r27
     dc4:	af 91       	pop	r26
     dc6:	9f 91       	pop	r25
     dc8:	8f 91       	pop	r24
     dca:	7f 91       	pop	r23
     dcc:	6f 91       	pop	r22
     dce:	5f 91       	pop	r21
     dd0:	4f 91       	pop	r20
     dd2:	3f 91       	pop	r19
     dd4:	2f 91       	pop	r18
     dd6:	0f 90       	pop	r0
     dd8:	0f be       	out	0x3f, r0	; 63
     dda:	0f 90       	pop	r0
     ddc:	1f 90       	pop	r1
     dde:	18 95       	reti

00000de0 <__vector_2>:

ISR(INT1_vect){
     de0:	1f 92       	push	r1
     de2:	0f 92       	push	r0
     de4:	0f b6       	in	r0, 0x3f	; 63
     de6:	0f 92       	push	r0
     de8:	11 24       	eor	r1, r1
     dea:	2f 93       	push	r18
     dec:	3f 93       	push	r19
     dee:	4f 93       	push	r20
     df0:	5f 93       	push	r21
     df2:	6f 93       	push	r22
     df4:	7f 93       	push	r23
     df6:	8f 93       	push	r24
     df8:	9f 93       	push	r25
     dfa:	af 93       	push	r26
     dfc:	bf 93       	push	r27
     dfe:	ef 93       	push	r30
     e00:	ff 93       	push	r31
	
	if(sensor_working_2==1){
     e02:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <sensor_working_2>
     e06:	81 30       	cpi	r24, 0x01	; 1
     e08:	09 f0       	breq	.+2      	; 0xe0c <__vector_2+0x2c>
     e0a:	42 c0       	rjmp	.+132    	; 0xe90 <__vector_2+0xb0>
		
		if(rising_edge_2==0){
     e0c:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <rising_edge_2>
     e10:	81 11       	cpse	r24, r1
     e12:	0e c0       	rjmp	.+28     	; 0xe30 <__vector_2+0x50>
			
			TCNT2=0x00;
     e14:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
			rising_edge_2=1;
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <rising_edge_2>
			timer_counter_2=0;
     e1e:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <timer_counter_2>
     e22:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <timer_counter_2+0x1>
     e26:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <timer_counter_2+0x2>
     e2a:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <timer_counter_2+0x3>
     e2e:	30 c0       	rjmp	.+96     	; 0xe90 <__vector_2+0xb0>
		}
		else{
			
			distance_2=(timer_counter_2*256+TCNT2)/932.8;
     e30:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <timer_counter_2>
     e34:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <timer_counter_2+0x1>
     e38:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <timer_counter_2+0x2>
     e3c:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <timer_counter_2+0x3>
     e40:	ba 2f       	mov	r27, r26
     e42:	a9 2f       	mov	r26, r25
     e44:	98 2f       	mov	r25, r24
     e46:	88 27       	eor	r24, r24
     e48:	20 91 b2 00 	lds	r18, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
     e4c:	bc 01       	movw	r22, r24
     e4e:	cd 01       	movw	r24, r26
     e50:	62 0f       	add	r22, r18
     e52:	71 1d       	adc	r23, r1
     e54:	81 1d       	adc	r24, r1
     e56:	91 1d       	adc	r25, r1
     e58:	0e 94 40 09 	call	0x1280	; 0x1280 <__floatunsisf>
     e5c:	23 e3       	ldi	r18, 0x33	; 51
     e5e:	33 e3       	ldi	r19, 0x33	; 51
     e60:	49 e6       	ldi	r20, 0x69	; 105
     e62:	54 e4       	ldi	r21, 0x44	; 68
     e64:	0e 94 98 08 	call	0x1130	; 0x1130 <__divsf3>
     e68:	0e 94 11 09 	call	0x1222	; 0x1222 <__fixunssfsi>
     e6c:	60 93 a0 02 	sts	0x02A0, r22	; 0x8002a0 <distance_2>
     e70:	70 93 a1 02 	sts	0x02A1, r23	; 0x8002a1 <distance_2+0x1>
     e74:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <distance_2+0x2>
     e78:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <distance_2+0x3>
			timer_counter_2=0;
     e7c:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <timer_counter_2>
     e80:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <timer_counter_2+0x1>
     e84:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <timer_counter_2+0x2>
     e88:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <timer_counter_2+0x3>
			rising_edge_2=0;
     e8c:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <rising_edge_2>
		}
	}
	
}
     e90:	ff 91       	pop	r31
     e92:	ef 91       	pop	r30
     e94:	bf 91       	pop	r27
     e96:	af 91       	pop	r26
     e98:	9f 91       	pop	r25
     e9a:	8f 91       	pop	r24
     e9c:	7f 91       	pop	r23
     e9e:	6f 91       	pop	r22
     ea0:	5f 91       	pop	r21
     ea2:	4f 91       	pop	r20
     ea4:	3f 91       	pop	r19
     ea6:	2f 91       	pop	r18
     ea8:	0f 90       	pop	r0
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	0f 90       	pop	r0
     eae:	1f 90       	pop	r1
     eb0:	18 95       	reti

00000eb2 <__vector_13>:

ISR(TIMER1_OVF_vect){
     eb2:	1f 92       	push	r1
     eb4:	0f 92       	push	r0
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	0f 92       	push	r0
     eba:	11 24       	eor	r1, r1
     ebc:	2f 93       	push	r18
     ebe:	8f 93       	push	r24
     ec0:	9f 93       	push	r25
     ec2:	af 93       	push	r26
     ec4:	bf 93       	push	r27
	timer_counter_1++;
     ec6:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <timer_counter_1>
     eca:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <timer_counter_1+0x1>
     ece:	a0 91 5c 02 	lds	r26, 0x025C	; 0x80025c <timer_counter_1+0x2>
     ed2:	b0 91 5d 02 	lds	r27, 0x025D	; 0x80025d <timer_counter_1+0x3>
     ed6:	01 96       	adiw	r24, 0x01	; 1
     ed8:	a1 1d       	adc	r26, r1
     eda:	b1 1d       	adc	r27, r1
     edc:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <timer_counter_1>
     ee0:	90 93 5b 02 	sts	0x025B, r25	; 0x80025b <timer_counter_1+0x1>
     ee4:	a0 93 5c 02 	sts	0x025C, r26	; 0x80025c <timer_counter_1+0x2>
     ee8:	b0 93 5d 02 	sts	0x025D, r27	; 0x80025d <timer_counter_1+0x3>
	if(timer_counter_1 >730){
     eec:	8b 3d       	cpi	r24, 0xDB	; 219
     eee:	92 40       	sbci	r25, 0x02	; 2
     ef0:	a1 05       	cpc	r26, r1
     ef2:	b1 05       	cpc	r27, r1
     ef4:	80 f0       	brcs	.+32     	; 0xf16 <__vector_13+0x64>
		TCNT1=0x00;
     ef6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     efa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
		sensor_working_1=0;
     efe:	10 92 61 02 	sts	0x0261, r1	; 0x800261 <sensor_working_1>
		rising_edge_1=0;
     f02:	10 92 5f 02 	sts	0x025F, r1	; 0x80025f <rising_edge_1>
		timer_counter_1=0;
     f06:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <timer_counter_1>
     f0a:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <timer_counter_1+0x1>
     f0e:	10 92 5c 02 	sts	0x025C, r1	; 0x80025c <timer_counter_1+0x2>
     f12:	10 92 5d 02 	sts	0x025D, r1	; 0x80025d <timer_counter_1+0x3>
	}
}
     f16:	bf 91       	pop	r27
     f18:	af 91       	pop	r26
     f1a:	9f 91       	pop	r25
     f1c:	8f 91       	pop	r24
     f1e:	2f 91       	pop	r18
     f20:	0f 90       	pop	r0
     f22:	0f be       	out	0x3f, r0	; 63
     f24:	0f 90       	pop	r0
     f26:	1f 90       	pop	r1
     f28:	18 95       	reti

00000f2a <__vector_9>:

ISR(TIMER2_OVF_vect){
     f2a:	1f 92       	push	r1
     f2c:	0f 92       	push	r0
     f2e:	0f b6       	in	r0, 0x3f	; 63
     f30:	0f 92       	push	r0
     f32:	11 24       	eor	r1, r1
     f34:	2f 93       	push	r18
     f36:	8f 93       	push	r24
     f38:	9f 93       	push	r25
     f3a:	af 93       	push	r26
     f3c:	bf 93       	push	r27
	timer_counter_2++;
     f3e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <timer_counter_2>
     f42:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <timer_counter_2+0x1>
     f46:	a0 91 58 02 	lds	r26, 0x0258	; 0x800258 <timer_counter_2+0x2>
     f4a:	b0 91 59 02 	lds	r27, 0x0259	; 0x800259 <timer_counter_2+0x3>
     f4e:	01 96       	adiw	r24, 0x01	; 1
     f50:	a1 1d       	adc	r26, r1
     f52:	b1 1d       	adc	r27, r1
     f54:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <timer_counter_2>
     f58:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <timer_counter_2+0x1>
     f5c:	a0 93 58 02 	sts	0x0258, r26	; 0x800258 <timer_counter_2+0x2>
     f60:	b0 93 59 02 	sts	0x0259, r27	; 0x800259 <timer_counter_2+0x3>
	if(timer_counter_2 >730){
     f64:	8b 3d       	cpi	r24, 0xDB	; 219
     f66:	92 40       	sbci	r25, 0x02	; 2
     f68:	a1 05       	cpc	r26, r1
     f6a:	b1 05       	cpc	r27, r1
     f6c:	70 f0       	brcs	.+28     	; 0xf8a <__vector_9+0x60>
		TCNT2=0x00;
     f6e:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		sensor_working_2=0;
     f72:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <sensor_working_2>
		rising_edge_2=0;
     f76:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <rising_edge_2>
		timer_counter_2=0;
     f7a:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <timer_counter_2>
     f7e:	10 92 57 02 	sts	0x0257, r1	; 0x800257 <timer_counter_2+0x1>
     f82:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <timer_counter_2+0x2>
     f86:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <timer_counter_2+0x3>
	}
	
}
     f8a:	bf 91       	pop	r27
     f8c:	af 91       	pop	r26
     f8e:	9f 91       	pop	r25
     f90:	8f 91       	pop	r24
     f92:	2f 91       	pop	r18
     f94:	0f 90       	pop	r0
     f96:	0f be       	out	0x3f, r0	; 63
     f98:	0f 90       	pop	r0
     f9a:	1f 90       	pop	r1
     f9c:	18 95       	reti

00000f9e <read_ultra_1>:

int read_ultra_1(){
	
	ultra_triger_1();
     f9e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <ultra_triger_1>
     fa2:	80 e5       	ldi	r24, 0x50	; 80
     fa4:	8a 95       	dec	r24
     fa6:	f1 f7       	brne	.-4      	; 0xfa4 <read_ultra_1+0x6>
	_delay_us(15);
	return distance_1;
     fa8:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <distance_1>
     fac:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <distance_1+0x1>
     fb0:	a0 91 a6 02 	lds	r26, 0x02A6	; 0x8002a6 <distance_1+0x2>
     fb4:	b0 91 a7 02 	lds	r27, 0x02A7	; 0x8002a7 <distance_1+0x3>
	
}
     fb8:	08 95       	ret

00000fba <read_ultra_2>:

int read_ultra_2(){
	
	ultra_triger_2();
     fba:	0e 94 73 06 	call	0xce6	; 0xce6 <ultra_triger_2>
     fbe:	80 e5       	ldi	r24, 0x50	; 80
     fc0:	8a 95       	dec	r24
     fc2:	f1 f7       	brne	.-4      	; 0xfc0 <read_ultra_2+0x6>
	_delay_us(15);
	return distance_2;
     fc4:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <distance_2>
     fc8:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <distance_2+0x1>
     fcc:	a0 91 a2 02 	lds	r26, 0x02A2	; 0x8002a2 <distance_2+0x2>
     fd0:	b0 91 a3 02 	lds	r27, 0x02A3	; 0x8002a3 <distance_2+0x3>
	
}
     fd4:	08 95       	ret

00000fd6 <get_states_of_ultrasonic>:
int get_states_of_ultrasonic(){
	
	if(read_ultra_1()>20 && read_ultra_2()>20){ // nothing front
     fd6:	0e 94 cf 07 	call	0xf9e	; 0xf9e <read_ultra_1>
     fda:	45 97       	sbiw	r24, 0x15	; 21
     fdc:	24 f0       	brlt	.+8      	; 0xfe6 <get_states_of_ultrasonic+0x10>
     fde:	0e 94 dd 07 	call	0xfba	; 0xfba <read_ultra_2>
     fe2:	45 97       	sbiw	r24, 0x15	; 21
     fe4:	0c f5       	brge	.+66     	; 0x1028 <get_states_of_ultrasonic+0x52>
		return 0;
	}
	else if (read_ultra_1()>20 && read_ultra_2()<20){ //nothing in right
     fe6:	0e 94 cf 07 	call	0xf9e	; 0xf9e <read_ultra_1>
     fea:	45 97       	sbiw	r24, 0x15	; 21
     fec:	24 f0       	brlt	.+8      	; 0xff6 <get_states_of_ultrasonic+0x20>
     fee:	0e 94 dd 07 	call	0xfba	; 0xfba <read_ultra_2>
     ff2:	44 97       	sbiw	r24, 0x14	; 20
     ff4:	e4 f0       	brlt	.+56     	; 0x102e <get_states_of_ultrasonic+0x58>
		return 1;
	}
	else if (read_ultra_1()<20 && read_ultra_2()>20){ //nothing in left 
     ff6:	0e 94 cf 07 	call	0xf9e	; 0xf9e <read_ultra_1>
     ffa:	44 97       	sbiw	r24, 0x14	; 20
     ffc:	24 f4       	brge	.+8      	; 0x1006 <get_states_of_ultrasonic+0x30>
     ffe:	0e 94 dd 07 	call	0xfba	; 0xfba <read_ultra_2>
    1002:	45 97       	sbiw	r24, 0x15	; 21
    1004:	bc f4       	brge	.+46     	; 0x1034 <get_states_of_ultrasonic+0x5e>
		return 2;
	}
	else if (read_ultra_1()<20 && read_ultra_2()<20){ // in bad situation
    1006:	0e 94 cf 07 	call	0xf9e	; 0xf9e <read_ultra_1>
    100a:	44 97       	sbiw	r24, 0x14	; 20
    100c:	24 f4       	brge	.+8      	; 0x1016 <get_states_of_ultrasonic+0x40>
    100e:	0e 94 dd 07 	call	0xfba	; 0xfba <read_ultra_2>
    1012:	44 97       	sbiw	r24, 0x14	; 20
    1014:	94 f0       	brlt	.+36     	; 0x103a <get_states_of_ultrasonic+0x64>
		return 3;
	}
	else if (read_ultra_1()<10 || read_ultra_2()<10){
    1016:	0e 94 cf 07 	call	0xf9e	; 0xf9e <read_ultra_1>
    101a:	0a 97       	sbiw	r24, 0x0a	; 10
    101c:	8c f0       	brlt	.+34     	; 0x1040 <get_states_of_ultrasonic+0x6a>
    101e:	0e 94 dd 07 	call	0xfba	; 0xfba <read_ultra_2>
    1022:	0a 97       	sbiw	r24, 0x0a	; 10
    1024:	84 f0       	brlt	.+32     	; 0x1046 <get_states_of_ultrasonic+0x70>
		return 4;
	}
}
    1026:	08 95       	ret
	
}
int get_states_of_ultrasonic(){
	
	if(read_ultra_1()>20 && read_ultra_2()>20){ // nothing front
		return 0;
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	08 95       	ret
	}
	else if (read_ultra_1()>20 && read_ultra_2()<20){ //nothing in right
		return 1;
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	08 95       	ret
	}
	else if (read_ultra_1()<20 && read_ultra_2()>20){ //nothing in left 
		return 2;
    1034:	82 e0       	ldi	r24, 0x02	; 2
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	08 95       	ret
	}
	else if (read_ultra_1()<20 && read_ultra_2()<20){ // in bad situation
		return 3;
    103a:	83 e0       	ldi	r24, 0x03	; 3
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	08 95       	ret
	}
	else if (read_ultra_1()<10 || read_ultra_2()<10){
		return 4;
    1040:	84 e0       	ldi	r24, 0x04	; 4
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	08 95       	ret
    1046:	84 e0       	ldi	r24, 0x04	; 4
    1048:	90 e0       	ldi	r25, 0x00	; 0
	}
}
    104a:	08 95       	ret

0000104c <__subsf3>:
    104c:	50 58       	subi	r21, 0x80	; 128

0000104e <__addsf3>:
    104e:	bb 27       	eor	r27, r27
    1050:	aa 27       	eor	r26, r26
    1052:	0e 94 3e 08 	call	0x107c	; 0x107c <__addsf3x>
    1056:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_round>
    105a:	0e 94 aa 09 	call	0x1354	; 0x1354 <__fp_pscA>
    105e:	38 f0       	brcs	.+14     	; 0x106e <__addsf3+0x20>
    1060:	0e 94 b1 09 	call	0x1362	; 0x1362 <__fp_pscB>
    1064:	20 f0       	brcs	.+8      	; 0x106e <__addsf3+0x20>
    1066:	39 f4       	brne	.+14     	; 0x1076 <__addsf3+0x28>
    1068:	9f 3f       	cpi	r25, 0xFF	; 255
    106a:	19 f4       	brne	.+6      	; 0x1072 <__addsf3+0x24>
    106c:	26 f4       	brtc	.+8      	; 0x1076 <__addsf3+0x28>
    106e:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__fp_nan>
    1072:	0e f4       	brtc	.+2      	; 0x1076 <__addsf3+0x28>
    1074:	e0 95       	com	r30
    1076:	e7 fb       	bst	r30, 7
    1078:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__fp_inf>

0000107c <__addsf3x>:
    107c:	e9 2f       	mov	r30, r25
    107e:	0e 94 c9 09 	call	0x1392	; 0x1392 <__fp_split3>
    1082:	58 f3       	brcs	.-42     	; 0x105a <__addsf3+0xc>
    1084:	ba 17       	cp	r27, r26
    1086:	62 07       	cpc	r22, r18
    1088:	73 07       	cpc	r23, r19
    108a:	84 07       	cpc	r24, r20
    108c:	95 07       	cpc	r25, r21
    108e:	20 f0       	brcs	.+8      	; 0x1098 <__addsf3x+0x1c>
    1090:	79 f4       	brne	.+30     	; 0x10b0 <__addsf3x+0x34>
    1092:	a6 f5       	brtc	.+104    	; 0x10fc <__addsf3x+0x80>
    1094:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__fp_zero>
    1098:	0e f4       	brtc	.+2      	; 0x109c <__addsf3x+0x20>
    109a:	e0 95       	com	r30
    109c:	0b 2e       	mov	r0, r27
    109e:	ba 2f       	mov	r27, r26
    10a0:	a0 2d       	mov	r26, r0
    10a2:	0b 01       	movw	r0, r22
    10a4:	b9 01       	movw	r22, r18
    10a6:	90 01       	movw	r18, r0
    10a8:	0c 01       	movw	r0, r24
    10aa:	ca 01       	movw	r24, r20
    10ac:	a0 01       	movw	r20, r0
    10ae:	11 24       	eor	r1, r1
    10b0:	ff 27       	eor	r31, r31
    10b2:	59 1b       	sub	r21, r25
    10b4:	99 f0       	breq	.+38     	; 0x10dc <__addsf3x+0x60>
    10b6:	59 3f       	cpi	r21, 0xF9	; 249
    10b8:	50 f4       	brcc	.+20     	; 0x10ce <__addsf3x+0x52>
    10ba:	50 3e       	cpi	r21, 0xE0	; 224
    10bc:	68 f1       	brcs	.+90     	; 0x1118 <__addsf3x+0x9c>
    10be:	1a 16       	cp	r1, r26
    10c0:	f0 40       	sbci	r31, 0x00	; 0
    10c2:	a2 2f       	mov	r26, r18
    10c4:	23 2f       	mov	r18, r19
    10c6:	34 2f       	mov	r19, r20
    10c8:	44 27       	eor	r20, r20
    10ca:	58 5f       	subi	r21, 0xF8	; 248
    10cc:	f3 cf       	rjmp	.-26     	; 0x10b4 <__addsf3x+0x38>
    10ce:	46 95       	lsr	r20
    10d0:	37 95       	ror	r19
    10d2:	27 95       	ror	r18
    10d4:	a7 95       	ror	r26
    10d6:	f0 40       	sbci	r31, 0x00	; 0
    10d8:	53 95       	inc	r21
    10da:	c9 f7       	brne	.-14     	; 0x10ce <__addsf3x+0x52>
    10dc:	7e f4       	brtc	.+30     	; 0x10fc <__addsf3x+0x80>
    10de:	1f 16       	cp	r1, r31
    10e0:	ba 0b       	sbc	r27, r26
    10e2:	62 0b       	sbc	r22, r18
    10e4:	73 0b       	sbc	r23, r19
    10e6:	84 0b       	sbc	r24, r20
    10e8:	ba f0       	brmi	.+46     	; 0x1118 <__addsf3x+0x9c>
    10ea:	91 50       	subi	r25, 0x01	; 1
    10ec:	a1 f0       	breq	.+40     	; 0x1116 <__addsf3x+0x9a>
    10ee:	ff 0f       	add	r31, r31
    10f0:	bb 1f       	adc	r27, r27
    10f2:	66 1f       	adc	r22, r22
    10f4:	77 1f       	adc	r23, r23
    10f6:	88 1f       	adc	r24, r24
    10f8:	c2 f7       	brpl	.-16     	; 0x10ea <__addsf3x+0x6e>
    10fa:	0e c0       	rjmp	.+28     	; 0x1118 <__addsf3x+0x9c>
    10fc:	ba 0f       	add	r27, r26
    10fe:	62 1f       	adc	r22, r18
    1100:	73 1f       	adc	r23, r19
    1102:	84 1f       	adc	r24, r20
    1104:	48 f4       	brcc	.+18     	; 0x1118 <__addsf3x+0x9c>
    1106:	87 95       	ror	r24
    1108:	77 95       	ror	r23
    110a:	67 95       	ror	r22
    110c:	b7 95       	ror	r27
    110e:	f7 95       	ror	r31
    1110:	9e 3f       	cpi	r25, 0xFE	; 254
    1112:	08 f0       	brcs	.+2      	; 0x1116 <__addsf3x+0x9a>
    1114:	b0 cf       	rjmp	.-160    	; 0x1076 <__addsf3+0x28>
    1116:	93 95       	inc	r25
    1118:	88 0f       	add	r24, r24
    111a:	08 f0       	brcs	.+2      	; 0x111e <__addsf3x+0xa2>
    111c:	99 27       	eor	r25, r25
    111e:	ee 0f       	add	r30, r30
    1120:	97 95       	ror	r25
    1122:	87 95       	ror	r24
    1124:	08 95       	ret

00001126 <__cmpsf2>:
    1126:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__fp_cmp>
    112a:	08 f4       	brcc	.+2      	; 0x112e <__cmpsf2+0x8>
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	08 95       	ret

00001130 <__divsf3>:
    1130:	0e 94 ac 08 	call	0x1158	; 0x1158 <__divsf3x>
    1134:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_round>
    1138:	0e 94 b1 09 	call	0x1362	; 0x1362 <__fp_pscB>
    113c:	58 f0       	brcs	.+22     	; 0x1154 <__divsf3+0x24>
    113e:	0e 94 aa 09 	call	0x1354	; 0x1354 <__fp_pscA>
    1142:	40 f0       	brcs	.+16     	; 0x1154 <__divsf3+0x24>
    1144:	29 f4       	brne	.+10     	; 0x1150 <__divsf3+0x20>
    1146:	5f 3f       	cpi	r21, 0xFF	; 255
    1148:	29 f0       	breq	.+10     	; 0x1154 <__divsf3+0x24>
    114a:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__fp_inf>
    114e:	51 11       	cpse	r21, r1
    1150:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__fp_szero>
    1154:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__fp_nan>

00001158 <__divsf3x>:
    1158:	0e 94 c9 09 	call	0x1392	; 0x1392 <__fp_split3>
    115c:	68 f3       	brcs	.-38     	; 0x1138 <__divsf3+0x8>

0000115e <__divsf3_pse>:
    115e:	99 23       	and	r25, r25
    1160:	b1 f3       	breq	.-20     	; 0x114e <__divsf3+0x1e>
    1162:	55 23       	and	r21, r21
    1164:	91 f3       	breq	.-28     	; 0x114a <__divsf3+0x1a>
    1166:	95 1b       	sub	r25, r21
    1168:	55 0b       	sbc	r21, r21
    116a:	bb 27       	eor	r27, r27
    116c:	aa 27       	eor	r26, r26
    116e:	62 17       	cp	r22, r18
    1170:	73 07       	cpc	r23, r19
    1172:	84 07       	cpc	r24, r20
    1174:	38 f0       	brcs	.+14     	; 0x1184 <__divsf3_pse+0x26>
    1176:	9f 5f       	subi	r25, 0xFF	; 255
    1178:	5f 4f       	sbci	r21, 0xFF	; 255
    117a:	22 0f       	add	r18, r18
    117c:	33 1f       	adc	r19, r19
    117e:	44 1f       	adc	r20, r20
    1180:	aa 1f       	adc	r26, r26
    1182:	a9 f3       	breq	.-22     	; 0x116e <__divsf3_pse+0x10>
    1184:	35 d0       	rcall	.+106    	; 0x11f0 <__divsf3_pse+0x92>
    1186:	0e 2e       	mov	r0, r30
    1188:	3a f0       	brmi	.+14     	; 0x1198 <__divsf3_pse+0x3a>
    118a:	e0 e8       	ldi	r30, 0x80	; 128
    118c:	32 d0       	rcall	.+100    	; 0x11f2 <__divsf3_pse+0x94>
    118e:	91 50       	subi	r25, 0x01	; 1
    1190:	50 40       	sbci	r21, 0x00	; 0
    1192:	e6 95       	lsr	r30
    1194:	00 1c       	adc	r0, r0
    1196:	ca f7       	brpl	.-14     	; 0x118a <__divsf3_pse+0x2c>
    1198:	2b d0       	rcall	.+86     	; 0x11f0 <__divsf3_pse+0x92>
    119a:	fe 2f       	mov	r31, r30
    119c:	29 d0       	rcall	.+82     	; 0x11f0 <__divsf3_pse+0x92>
    119e:	66 0f       	add	r22, r22
    11a0:	77 1f       	adc	r23, r23
    11a2:	88 1f       	adc	r24, r24
    11a4:	bb 1f       	adc	r27, r27
    11a6:	26 17       	cp	r18, r22
    11a8:	37 07       	cpc	r19, r23
    11aa:	48 07       	cpc	r20, r24
    11ac:	ab 07       	cpc	r26, r27
    11ae:	b0 e8       	ldi	r27, 0x80	; 128
    11b0:	09 f0       	breq	.+2      	; 0x11b4 <__divsf3_pse+0x56>
    11b2:	bb 0b       	sbc	r27, r27
    11b4:	80 2d       	mov	r24, r0
    11b6:	bf 01       	movw	r22, r30
    11b8:	ff 27       	eor	r31, r31
    11ba:	93 58       	subi	r25, 0x83	; 131
    11bc:	5f 4f       	sbci	r21, 0xFF	; 255
    11be:	3a f0       	brmi	.+14     	; 0x11ce <__divsf3_pse+0x70>
    11c0:	9e 3f       	cpi	r25, 0xFE	; 254
    11c2:	51 05       	cpc	r21, r1
    11c4:	78 f0       	brcs	.+30     	; 0x11e4 <__divsf3_pse+0x86>
    11c6:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__fp_inf>
    11ca:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__fp_szero>
    11ce:	5f 3f       	cpi	r21, 0xFF	; 255
    11d0:	e4 f3       	brlt	.-8      	; 0x11ca <__divsf3_pse+0x6c>
    11d2:	98 3e       	cpi	r25, 0xE8	; 232
    11d4:	d4 f3       	brlt	.-12     	; 0x11ca <__divsf3_pse+0x6c>
    11d6:	86 95       	lsr	r24
    11d8:	77 95       	ror	r23
    11da:	67 95       	ror	r22
    11dc:	b7 95       	ror	r27
    11de:	f7 95       	ror	r31
    11e0:	9f 5f       	subi	r25, 0xFF	; 255
    11e2:	c9 f7       	brne	.-14     	; 0x11d6 <__divsf3_pse+0x78>
    11e4:	88 0f       	add	r24, r24
    11e6:	91 1d       	adc	r25, r1
    11e8:	96 95       	lsr	r25
    11ea:	87 95       	ror	r24
    11ec:	97 f9       	bld	r25, 7
    11ee:	08 95       	ret
    11f0:	e1 e0       	ldi	r30, 0x01	; 1
    11f2:	66 0f       	add	r22, r22
    11f4:	77 1f       	adc	r23, r23
    11f6:	88 1f       	adc	r24, r24
    11f8:	bb 1f       	adc	r27, r27
    11fa:	62 17       	cp	r22, r18
    11fc:	73 07       	cpc	r23, r19
    11fe:	84 07       	cpc	r24, r20
    1200:	ba 07       	cpc	r27, r26
    1202:	20 f0       	brcs	.+8      	; 0x120c <__divsf3_pse+0xae>
    1204:	62 1b       	sub	r22, r18
    1206:	73 0b       	sbc	r23, r19
    1208:	84 0b       	sbc	r24, r20
    120a:	ba 0b       	sbc	r27, r26
    120c:	ee 1f       	adc	r30, r30
    120e:	88 f7       	brcc	.-30     	; 0x11f2 <__divsf3_pse+0x94>
    1210:	e0 95       	com	r30
    1212:	08 95       	ret

00001214 <__fixsfsi>:
    1214:	0e 94 11 09 	call	0x1222	; 0x1222 <__fixunssfsi>
    1218:	68 94       	set
    121a:	b1 11       	cpse	r27, r1
    121c:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__fp_szero>
    1220:	08 95       	ret

00001222 <__fixunssfsi>:
    1222:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__fp_splitA>
    1226:	88 f0       	brcs	.+34     	; 0x124a <__fixunssfsi+0x28>
    1228:	9f 57       	subi	r25, 0x7F	; 127
    122a:	98 f0       	brcs	.+38     	; 0x1252 <__fixunssfsi+0x30>
    122c:	b9 2f       	mov	r27, r25
    122e:	99 27       	eor	r25, r25
    1230:	b7 51       	subi	r27, 0x17	; 23
    1232:	b0 f0       	brcs	.+44     	; 0x1260 <__fixunssfsi+0x3e>
    1234:	e1 f0       	breq	.+56     	; 0x126e <__fixunssfsi+0x4c>
    1236:	66 0f       	add	r22, r22
    1238:	77 1f       	adc	r23, r23
    123a:	88 1f       	adc	r24, r24
    123c:	99 1f       	adc	r25, r25
    123e:	1a f0       	brmi	.+6      	; 0x1246 <__fixunssfsi+0x24>
    1240:	ba 95       	dec	r27
    1242:	c9 f7       	brne	.-14     	; 0x1236 <__fixunssfsi+0x14>
    1244:	14 c0       	rjmp	.+40     	; 0x126e <__fixunssfsi+0x4c>
    1246:	b1 30       	cpi	r27, 0x01	; 1
    1248:	91 f0       	breq	.+36     	; 0x126e <__fixunssfsi+0x4c>
    124a:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__fp_zero>
    124e:	b1 e0       	ldi	r27, 0x01	; 1
    1250:	08 95       	ret
    1252:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__fp_zero>
    1256:	67 2f       	mov	r22, r23
    1258:	78 2f       	mov	r23, r24
    125a:	88 27       	eor	r24, r24
    125c:	b8 5f       	subi	r27, 0xF8	; 248
    125e:	39 f0       	breq	.+14     	; 0x126e <__fixunssfsi+0x4c>
    1260:	b9 3f       	cpi	r27, 0xF9	; 249
    1262:	cc f3       	brlt	.-14     	; 0x1256 <__fixunssfsi+0x34>
    1264:	86 95       	lsr	r24
    1266:	77 95       	ror	r23
    1268:	67 95       	ror	r22
    126a:	b3 95       	inc	r27
    126c:	d9 f7       	brne	.-10     	; 0x1264 <__fixunssfsi+0x42>
    126e:	3e f4       	brtc	.+14     	; 0x127e <__fixunssfsi+0x5c>
    1270:	90 95       	com	r25
    1272:	80 95       	com	r24
    1274:	70 95       	com	r23
    1276:	61 95       	neg	r22
    1278:	7f 4f       	sbci	r23, 0xFF	; 255
    127a:	8f 4f       	sbci	r24, 0xFF	; 255
    127c:	9f 4f       	sbci	r25, 0xFF	; 255
    127e:	08 95       	ret

00001280 <__floatunsisf>:
    1280:	e8 94       	clt
    1282:	09 c0       	rjmp	.+18     	; 0x1296 <__floatsisf+0x12>

00001284 <__floatsisf>:
    1284:	97 fb       	bst	r25, 7
    1286:	3e f4       	brtc	.+14     	; 0x1296 <__floatsisf+0x12>
    1288:	90 95       	com	r25
    128a:	80 95       	com	r24
    128c:	70 95       	com	r23
    128e:	61 95       	neg	r22
    1290:	7f 4f       	sbci	r23, 0xFF	; 255
    1292:	8f 4f       	sbci	r24, 0xFF	; 255
    1294:	9f 4f       	sbci	r25, 0xFF	; 255
    1296:	99 23       	and	r25, r25
    1298:	a9 f0       	breq	.+42     	; 0x12c4 <__floatsisf+0x40>
    129a:	f9 2f       	mov	r31, r25
    129c:	96 e9       	ldi	r25, 0x96	; 150
    129e:	bb 27       	eor	r27, r27
    12a0:	93 95       	inc	r25
    12a2:	f6 95       	lsr	r31
    12a4:	87 95       	ror	r24
    12a6:	77 95       	ror	r23
    12a8:	67 95       	ror	r22
    12aa:	b7 95       	ror	r27
    12ac:	f1 11       	cpse	r31, r1
    12ae:	f8 cf       	rjmp	.-16     	; 0x12a0 <__floatsisf+0x1c>
    12b0:	fa f4       	brpl	.+62     	; 0x12f0 <__floatsisf+0x6c>
    12b2:	bb 0f       	add	r27, r27
    12b4:	11 f4       	brne	.+4      	; 0x12ba <__floatsisf+0x36>
    12b6:	60 ff       	sbrs	r22, 0
    12b8:	1b c0       	rjmp	.+54     	; 0x12f0 <__floatsisf+0x6c>
    12ba:	6f 5f       	subi	r22, 0xFF	; 255
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255
    12be:	8f 4f       	sbci	r24, 0xFF	; 255
    12c0:	9f 4f       	sbci	r25, 0xFF	; 255
    12c2:	16 c0       	rjmp	.+44     	; 0x12f0 <__floatsisf+0x6c>
    12c4:	88 23       	and	r24, r24
    12c6:	11 f0       	breq	.+4      	; 0x12cc <__floatsisf+0x48>
    12c8:	96 e9       	ldi	r25, 0x96	; 150
    12ca:	11 c0       	rjmp	.+34     	; 0x12ee <__floatsisf+0x6a>
    12cc:	77 23       	and	r23, r23
    12ce:	21 f0       	breq	.+8      	; 0x12d8 <__floatsisf+0x54>
    12d0:	9e e8       	ldi	r25, 0x8E	; 142
    12d2:	87 2f       	mov	r24, r23
    12d4:	76 2f       	mov	r23, r22
    12d6:	05 c0       	rjmp	.+10     	; 0x12e2 <__floatsisf+0x5e>
    12d8:	66 23       	and	r22, r22
    12da:	71 f0       	breq	.+28     	; 0x12f8 <__floatsisf+0x74>
    12dc:	96 e8       	ldi	r25, 0x86	; 134
    12de:	86 2f       	mov	r24, r22
    12e0:	70 e0       	ldi	r23, 0x00	; 0
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	2a f0       	brmi	.+10     	; 0x12f0 <__floatsisf+0x6c>
    12e6:	9a 95       	dec	r25
    12e8:	66 0f       	add	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	88 1f       	adc	r24, r24
    12ee:	da f7       	brpl	.-10     	; 0x12e6 <__floatsisf+0x62>
    12f0:	88 0f       	add	r24, r24
    12f2:	96 95       	lsr	r25
    12f4:	87 95       	ror	r24
    12f6:	97 f9       	bld	r25, 7
    12f8:	08 95       	ret

000012fa <__fp_cmp>:
    12fa:	99 0f       	add	r25, r25
    12fc:	00 08       	sbc	r0, r0
    12fe:	55 0f       	add	r21, r21
    1300:	aa 0b       	sbc	r26, r26
    1302:	e0 e8       	ldi	r30, 0x80	; 128
    1304:	fe ef       	ldi	r31, 0xFE	; 254
    1306:	16 16       	cp	r1, r22
    1308:	17 06       	cpc	r1, r23
    130a:	e8 07       	cpc	r30, r24
    130c:	f9 07       	cpc	r31, r25
    130e:	c0 f0       	brcs	.+48     	; 0x1340 <__fp_cmp+0x46>
    1310:	12 16       	cp	r1, r18
    1312:	13 06       	cpc	r1, r19
    1314:	e4 07       	cpc	r30, r20
    1316:	f5 07       	cpc	r31, r21
    1318:	98 f0       	brcs	.+38     	; 0x1340 <__fp_cmp+0x46>
    131a:	62 1b       	sub	r22, r18
    131c:	73 0b       	sbc	r23, r19
    131e:	84 0b       	sbc	r24, r20
    1320:	95 0b       	sbc	r25, r21
    1322:	39 f4       	brne	.+14     	; 0x1332 <__fp_cmp+0x38>
    1324:	0a 26       	eor	r0, r26
    1326:	61 f0       	breq	.+24     	; 0x1340 <__fp_cmp+0x46>
    1328:	23 2b       	or	r18, r19
    132a:	24 2b       	or	r18, r20
    132c:	25 2b       	or	r18, r21
    132e:	21 f4       	brne	.+8      	; 0x1338 <__fp_cmp+0x3e>
    1330:	08 95       	ret
    1332:	0a 26       	eor	r0, r26
    1334:	09 f4       	brne	.+2      	; 0x1338 <__fp_cmp+0x3e>
    1336:	a1 40       	sbci	r26, 0x01	; 1
    1338:	a6 95       	lsr	r26
    133a:	8f ef       	ldi	r24, 0xFF	; 255
    133c:	81 1d       	adc	r24, r1
    133e:	81 1d       	adc	r24, r1
    1340:	08 95       	ret

00001342 <__fp_inf>:
    1342:	97 f9       	bld	r25, 7
    1344:	9f 67       	ori	r25, 0x7F	; 127
    1346:	80 e8       	ldi	r24, 0x80	; 128
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	60 e0       	ldi	r22, 0x00	; 0
    134c:	08 95       	ret

0000134e <__fp_nan>:
    134e:	9f ef       	ldi	r25, 0xFF	; 255
    1350:	80 ec       	ldi	r24, 0xC0	; 192
    1352:	08 95       	ret

00001354 <__fp_pscA>:
    1354:	00 24       	eor	r0, r0
    1356:	0a 94       	dec	r0
    1358:	16 16       	cp	r1, r22
    135a:	17 06       	cpc	r1, r23
    135c:	18 06       	cpc	r1, r24
    135e:	09 06       	cpc	r0, r25
    1360:	08 95       	ret

00001362 <__fp_pscB>:
    1362:	00 24       	eor	r0, r0
    1364:	0a 94       	dec	r0
    1366:	12 16       	cp	r1, r18
    1368:	13 06       	cpc	r1, r19
    136a:	14 06       	cpc	r1, r20
    136c:	05 06       	cpc	r0, r21
    136e:	08 95       	ret

00001370 <__fp_round>:
    1370:	09 2e       	mov	r0, r25
    1372:	03 94       	inc	r0
    1374:	00 0c       	add	r0, r0
    1376:	11 f4       	brne	.+4      	; 0x137c <__fp_round+0xc>
    1378:	88 23       	and	r24, r24
    137a:	52 f0       	brmi	.+20     	; 0x1390 <__fp_round+0x20>
    137c:	bb 0f       	add	r27, r27
    137e:	40 f4       	brcc	.+16     	; 0x1390 <__fp_round+0x20>
    1380:	bf 2b       	or	r27, r31
    1382:	11 f4       	brne	.+4      	; 0x1388 <__fp_round+0x18>
    1384:	60 ff       	sbrs	r22, 0
    1386:	04 c0       	rjmp	.+8      	; 0x1390 <__fp_round+0x20>
    1388:	6f 5f       	subi	r22, 0xFF	; 255
    138a:	7f 4f       	sbci	r23, 0xFF	; 255
    138c:	8f 4f       	sbci	r24, 0xFF	; 255
    138e:	9f 4f       	sbci	r25, 0xFF	; 255
    1390:	08 95       	ret

00001392 <__fp_split3>:
    1392:	57 fd       	sbrc	r21, 7
    1394:	90 58       	subi	r25, 0x80	; 128
    1396:	44 0f       	add	r20, r20
    1398:	55 1f       	adc	r21, r21
    139a:	59 f0       	breq	.+22     	; 0x13b2 <__fp_splitA+0x10>
    139c:	5f 3f       	cpi	r21, 0xFF	; 255
    139e:	71 f0       	breq	.+28     	; 0x13bc <__fp_splitA+0x1a>
    13a0:	47 95       	ror	r20

000013a2 <__fp_splitA>:
    13a2:	88 0f       	add	r24, r24
    13a4:	97 fb       	bst	r25, 7
    13a6:	99 1f       	adc	r25, r25
    13a8:	61 f0       	breq	.+24     	; 0x13c2 <__fp_splitA+0x20>
    13aa:	9f 3f       	cpi	r25, 0xFF	; 255
    13ac:	79 f0       	breq	.+30     	; 0x13cc <__fp_splitA+0x2a>
    13ae:	87 95       	ror	r24
    13b0:	08 95       	ret
    13b2:	12 16       	cp	r1, r18
    13b4:	13 06       	cpc	r1, r19
    13b6:	14 06       	cpc	r1, r20
    13b8:	55 1f       	adc	r21, r21
    13ba:	f2 cf       	rjmp	.-28     	; 0x13a0 <__fp_split3+0xe>
    13bc:	46 95       	lsr	r20
    13be:	f1 df       	rcall	.-30     	; 0x13a2 <__fp_splitA>
    13c0:	08 c0       	rjmp	.+16     	; 0x13d2 <__fp_splitA+0x30>
    13c2:	16 16       	cp	r1, r22
    13c4:	17 06       	cpc	r1, r23
    13c6:	18 06       	cpc	r1, r24
    13c8:	99 1f       	adc	r25, r25
    13ca:	f1 cf       	rjmp	.-30     	; 0x13ae <__fp_splitA+0xc>
    13cc:	86 95       	lsr	r24
    13ce:	71 05       	cpc	r23, r1
    13d0:	61 05       	cpc	r22, r1
    13d2:	08 94       	sec
    13d4:	08 95       	ret

000013d6 <__fp_zero>:
    13d6:	e8 94       	clt

000013d8 <__fp_szero>:
    13d8:	bb 27       	eor	r27, r27
    13da:	66 27       	eor	r22, r22
    13dc:	77 27       	eor	r23, r23
    13de:	cb 01       	movw	r24, r22
    13e0:	97 f9       	bld	r25, 7
    13e2:	08 95       	ret

000013e4 <__mulsf3>:
    13e4:	0e 94 05 0a 	call	0x140a	; 0x140a <__mulsf3x>
    13e8:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_round>
    13ec:	0e 94 aa 09 	call	0x1354	; 0x1354 <__fp_pscA>
    13f0:	38 f0       	brcs	.+14     	; 0x1400 <__mulsf3+0x1c>
    13f2:	0e 94 b1 09 	call	0x1362	; 0x1362 <__fp_pscB>
    13f6:	20 f0       	brcs	.+8      	; 0x1400 <__mulsf3+0x1c>
    13f8:	95 23       	and	r25, r21
    13fa:	11 f0       	breq	.+4      	; 0x1400 <__mulsf3+0x1c>
    13fc:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__fp_inf>
    1400:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__fp_nan>
    1404:	11 24       	eor	r1, r1
    1406:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__fp_szero>

0000140a <__mulsf3x>:
    140a:	0e 94 c9 09 	call	0x1392	; 0x1392 <__fp_split3>
    140e:	70 f3       	brcs	.-36     	; 0x13ec <__mulsf3+0x8>

00001410 <__mulsf3_pse>:
    1410:	95 9f       	mul	r25, r21
    1412:	c1 f3       	breq	.-16     	; 0x1404 <__mulsf3+0x20>
    1414:	95 0f       	add	r25, r21
    1416:	50 e0       	ldi	r21, 0x00	; 0
    1418:	55 1f       	adc	r21, r21
    141a:	62 9f       	mul	r22, r18
    141c:	f0 01       	movw	r30, r0
    141e:	72 9f       	mul	r23, r18
    1420:	bb 27       	eor	r27, r27
    1422:	f0 0d       	add	r31, r0
    1424:	b1 1d       	adc	r27, r1
    1426:	63 9f       	mul	r22, r19
    1428:	aa 27       	eor	r26, r26
    142a:	f0 0d       	add	r31, r0
    142c:	b1 1d       	adc	r27, r1
    142e:	aa 1f       	adc	r26, r26
    1430:	64 9f       	mul	r22, r20
    1432:	66 27       	eor	r22, r22
    1434:	b0 0d       	add	r27, r0
    1436:	a1 1d       	adc	r26, r1
    1438:	66 1f       	adc	r22, r22
    143a:	82 9f       	mul	r24, r18
    143c:	22 27       	eor	r18, r18
    143e:	b0 0d       	add	r27, r0
    1440:	a1 1d       	adc	r26, r1
    1442:	62 1f       	adc	r22, r18
    1444:	73 9f       	mul	r23, r19
    1446:	b0 0d       	add	r27, r0
    1448:	a1 1d       	adc	r26, r1
    144a:	62 1f       	adc	r22, r18
    144c:	83 9f       	mul	r24, r19
    144e:	a0 0d       	add	r26, r0
    1450:	61 1d       	adc	r22, r1
    1452:	22 1f       	adc	r18, r18
    1454:	74 9f       	mul	r23, r20
    1456:	33 27       	eor	r19, r19
    1458:	a0 0d       	add	r26, r0
    145a:	61 1d       	adc	r22, r1
    145c:	23 1f       	adc	r18, r19
    145e:	84 9f       	mul	r24, r20
    1460:	60 0d       	add	r22, r0
    1462:	21 1d       	adc	r18, r1
    1464:	82 2f       	mov	r24, r18
    1466:	76 2f       	mov	r23, r22
    1468:	6a 2f       	mov	r22, r26
    146a:	11 24       	eor	r1, r1
    146c:	9f 57       	subi	r25, 0x7F	; 127
    146e:	50 40       	sbci	r21, 0x00	; 0
    1470:	9a f0       	brmi	.+38     	; 0x1498 <__mulsf3_pse+0x88>
    1472:	f1 f0       	breq	.+60     	; 0x14b0 <__mulsf3_pse+0xa0>
    1474:	88 23       	and	r24, r24
    1476:	4a f0       	brmi	.+18     	; 0x148a <__mulsf3_pse+0x7a>
    1478:	ee 0f       	add	r30, r30
    147a:	ff 1f       	adc	r31, r31
    147c:	bb 1f       	adc	r27, r27
    147e:	66 1f       	adc	r22, r22
    1480:	77 1f       	adc	r23, r23
    1482:	88 1f       	adc	r24, r24
    1484:	91 50       	subi	r25, 0x01	; 1
    1486:	50 40       	sbci	r21, 0x00	; 0
    1488:	a9 f7       	brne	.-22     	; 0x1474 <__mulsf3_pse+0x64>
    148a:	9e 3f       	cpi	r25, 0xFE	; 254
    148c:	51 05       	cpc	r21, r1
    148e:	80 f0       	brcs	.+32     	; 0x14b0 <__mulsf3_pse+0xa0>
    1490:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <__fp_inf>
    1494:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <__fp_szero>
    1498:	5f 3f       	cpi	r21, 0xFF	; 255
    149a:	e4 f3       	brlt	.-8      	; 0x1494 <__mulsf3_pse+0x84>
    149c:	98 3e       	cpi	r25, 0xE8	; 232
    149e:	d4 f3       	brlt	.-12     	; 0x1494 <__mulsf3_pse+0x84>
    14a0:	86 95       	lsr	r24
    14a2:	77 95       	ror	r23
    14a4:	67 95       	ror	r22
    14a6:	b7 95       	ror	r27
    14a8:	f7 95       	ror	r31
    14aa:	e7 95       	ror	r30
    14ac:	9f 5f       	subi	r25, 0xFF	; 255
    14ae:	c1 f7       	brne	.-16     	; 0x14a0 <__mulsf3_pse+0x90>
    14b0:	fe 2b       	or	r31, r30
    14b2:	88 0f       	add	r24, r24
    14b4:	91 1d       	adc	r25, r1
    14b6:	96 95       	lsr	r25
    14b8:	87 95       	ror	r24
    14ba:	97 f9       	bld	r25, 7
    14bc:	08 95       	ret

000014be <__divmodhi4>:
    14be:	97 fb       	bst	r25, 7
    14c0:	07 2e       	mov	r0, r23
    14c2:	16 f4       	brtc	.+4      	; 0x14c8 <__divmodhi4+0xa>
    14c4:	00 94       	com	r0
    14c6:	07 d0       	rcall	.+14     	; 0x14d6 <__divmodhi4_neg1>
    14c8:	77 fd       	sbrc	r23, 7
    14ca:	09 d0       	rcall	.+18     	; 0x14de <__divmodhi4_neg2>
    14cc:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <__udivmodhi4>
    14d0:	07 fc       	sbrc	r0, 7
    14d2:	05 d0       	rcall	.+10     	; 0x14de <__divmodhi4_neg2>
    14d4:	3e f4       	brtc	.+14     	; 0x14e4 <__divmodhi4_exit>

000014d6 <__divmodhi4_neg1>:
    14d6:	90 95       	com	r25
    14d8:	81 95       	neg	r24
    14da:	9f 4f       	sbci	r25, 0xFF	; 255
    14dc:	08 95       	ret

000014de <__divmodhi4_neg2>:
    14de:	70 95       	com	r23
    14e0:	61 95       	neg	r22
    14e2:	7f 4f       	sbci	r23, 0xFF	; 255

000014e4 <__divmodhi4_exit>:
    14e4:	08 95       	ret

000014e6 <__udivmodhi4>:
    14e6:	aa 1b       	sub	r26, r26
    14e8:	bb 1b       	sub	r27, r27
    14ea:	51 e1       	ldi	r21, 0x11	; 17
    14ec:	07 c0       	rjmp	.+14     	; 0x14fc <__udivmodhi4_ep>

000014ee <__udivmodhi4_loop>:
    14ee:	aa 1f       	adc	r26, r26
    14f0:	bb 1f       	adc	r27, r27
    14f2:	a6 17       	cp	r26, r22
    14f4:	b7 07       	cpc	r27, r23
    14f6:	10 f0       	brcs	.+4      	; 0x14fc <__udivmodhi4_ep>
    14f8:	a6 1b       	sub	r26, r22
    14fa:	b7 0b       	sbc	r27, r23

000014fc <__udivmodhi4_ep>:
    14fc:	88 1f       	adc	r24, r24
    14fe:	99 1f       	adc	r25, r25
    1500:	5a 95       	dec	r21
    1502:	a9 f7       	brne	.-22     	; 0x14ee <__udivmodhi4_loop>
    1504:	80 95       	com	r24
    1506:	90 95       	com	r25
    1508:	bc 01       	movw	r22, r24
    150a:	cd 01       	movw	r24, r26
    150c:	08 95       	ret

0000150e <do_rand>:
    150e:	8f 92       	push	r8
    1510:	9f 92       	push	r9
    1512:	af 92       	push	r10
    1514:	bf 92       	push	r11
    1516:	cf 92       	push	r12
    1518:	df 92       	push	r13
    151a:	ef 92       	push	r14
    151c:	ff 92       	push	r15
    151e:	cf 93       	push	r28
    1520:	df 93       	push	r29
    1522:	ec 01       	movw	r28, r24
    1524:	68 81       	ld	r22, Y
    1526:	79 81       	ldd	r23, Y+1	; 0x01
    1528:	8a 81       	ldd	r24, Y+2	; 0x02
    152a:	9b 81       	ldd	r25, Y+3	; 0x03
    152c:	61 15       	cp	r22, r1
    152e:	71 05       	cpc	r23, r1
    1530:	81 05       	cpc	r24, r1
    1532:	91 05       	cpc	r25, r1
    1534:	21 f4       	brne	.+8      	; 0x153e <do_rand+0x30>
    1536:	64 e2       	ldi	r22, 0x24	; 36
    1538:	79 ed       	ldi	r23, 0xD9	; 217
    153a:	8b e5       	ldi	r24, 0x5B	; 91
    153c:	97 e0       	ldi	r25, 0x07	; 7
    153e:	2d e1       	ldi	r18, 0x1D	; 29
    1540:	33 ef       	ldi	r19, 0xF3	; 243
    1542:	41 e0       	ldi	r20, 0x01	; 1
    1544:	50 e0       	ldi	r21, 0x00	; 0
    1546:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <__divmodsi4>
    154a:	49 01       	movw	r8, r18
    154c:	5a 01       	movw	r10, r20
    154e:	9b 01       	movw	r18, r22
    1550:	ac 01       	movw	r20, r24
    1552:	a7 ea       	ldi	r26, 0xA7	; 167
    1554:	b1 e4       	ldi	r27, 0x41	; 65
    1556:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <__muluhisi3>
    155a:	6b 01       	movw	r12, r22
    155c:	7c 01       	movw	r14, r24
    155e:	ac ee       	ldi	r26, 0xEC	; 236
    1560:	b4 ef       	ldi	r27, 0xF4	; 244
    1562:	a5 01       	movw	r20, r10
    1564:	94 01       	movw	r18, r8
    1566:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <__mulohisi3>
    156a:	dc 01       	movw	r26, r24
    156c:	cb 01       	movw	r24, r22
    156e:	8c 0d       	add	r24, r12
    1570:	9d 1d       	adc	r25, r13
    1572:	ae 1d       	adc	r26, r14
    1574:	bf 1d       	adc	r27, r15
    1576:	b7 ff       	sbrs	r27, 7
    1578:	03 c0       	rjmp	.+6      	; 0x1580 <do_rand+0x72>
    157a:	01 97       	sbiw	r24, 0x01	; 1
    157c:	a1 09       	sbc	r26, r1
    157e:	b0 48       	sbci	r27, 0x80	; 128
    1580:	88 83       	st	Y, r24
    1582:	99 83       	std	Y+1, r25	; 0x01
    1584:	aa 83       	std	Y+2, r26	; 0x02
    1586:	bb 83       	std	Y+3, r27	; 0x03
    1588:	9f 77       	andi	r25, 0x7F	; 127
    158a:	df 91       	pop	r29
    158c:	cf 91       	pop	r28
    158e:	ff 90       	pop	r15
    1590:	ef 90       	pop	r14
    1592:	df 90       	pop	r13
    1594:	cf 90       	pop	r12
    1596:	bf 90       	pop	r11
    1598:	af 90       	pop	r10
    159a:	9f 90       	pop	r9
    159c:	8f 90       	pop	r8
    159e:	08 95       	ret

000015a0 <rand_r>:
    15a0:	0e 94 87 0a 	call	0x150e	; 0x150e <do_rand>
    15a4:	08 95       	ret

000015a6 <rand>:
    15a6:	80 e0       	ldi	r24, 0x00	; 0
    15a8:	91 e0       	ldi	r25, 0x01	; 1
    15aa:	0e 94 87 0a 	call	0x150e	; 0x150e <do_rand>
    15ae:	08 95       	ret

000015b0 <srand>:
    15b0:	a0 e0       	ldi	r26, 0x00	; 0
    15b2:	b0 e0       	ldi	r27, 0x00	; 0
    15b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    15b8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15bc:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    15c0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    15c4:	08 95       	ret

000015c6 <sprintf>:
    15c6:	ae e0       	ldi	r26, 0x0E	; 14
    15c8:	b0 e0       	ldi	r27, 0x00	; 0
    15ca:	e9 ee       	ldi	r30, 0xE9	; 233
    15cc:	fa e0       	ldi	r31, 0x0A	; 10
    15ce:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__prologue_saves__+0x1c>
    15d2:	0d 89       	ldd	r16, Y+21	; 0x15
    15d4:	1e 89       	ldd	r17, Y+22	; 0x16
    15d6:	86 e0       	ldi	r24, 0x06	; 6
    15d8:	8c 83       	std	Y+4, r24	; 0x04
    15da:	1a 83       	std	Y+2, r17	; 0x02
    15dc:	09 83       	std	Y+1, r16	; 0x01
    15de:	8f ef       	ldi	r24, 0xFF	; 255
    15e0:	9f e7       	ldi	r25, 0x7F	; 127
    15e2:	9e 83       	std	Y+6, r25	; 0x06
    15e4:	8d 83       	std	Y+5, r24	; 0x05
    15e6:	ae 01       	movw	r20, r28
    15e8:	47 5e       	subi	r20, 0xE7	; 231
    15ea:	5f 4f       	sbci	r21, 0xFF	; 255
    15ec:	6f 89       	ldd	r22, Y+23	; 0x17
    15ee:	78 8d       	ldd	r23, Y+24	; 0x18
    15f0:	ce 01       	movw	r24, r28
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	0e 94 05 0b 	call	0x160a	; 0x160a <vfprintf>
    15f8:	ef 81       	ldd	r30, Y+7	; 0x07
    15fa:	f8 85       	ldd	r31, Y+8	; 0x08
    15fc:	e0 0f       	add	r30, r16
    15fe:	f1 1f       	adc	r31, r17
    1600:	10 82       	st	Z, r1
    1602:	2e 96       	adiw	r28, 0x0e	; 14
    1604:	e4 e0       	ldi	r30, 0x04	; 4
    1606:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__epilogue_restores__+0x1c>

0000160a <vfprintf>:
    160a:	ab e0       	ldi	r26, 0x0B	; 11
    160c:	b0 e0       	ldi	r27, 0x00	; 0
    160e:	eb e0       	ldi	r30, 0x0B	; 11
    1610:	fb e0       	ldi	r31, 0x0B	; 11
    1612:	0c 94 c8 0d 	jmp	0x1b90	; 0x1b90 <__prologue_saves__>
    1616:	6c 01       	movw	r12, r24
    1618:	7b 01       	movw	r14, r22
    161a:	8a 01       	movw	r16, r20
    161c:	fc 01       	movw	r30, r24
    161e:	17 82       	std	Z+7, r1	; 0x07
    1620:	16 82       	std	Z+6, r1	; 0x06
    1622:	83 81       	ldd	r24, Z+3	; 0x03
    1624:	81 ff       	sbrs	r24, 1
    1626:	cc c1       	rjmp	.+920    	; 0x19c0 <vfprintf+0x3b6>
    1628:	ce 01       	movw	r24, r28
    162a:	01 96       	adiw	r24, 0x01	; 1
    162c:	3c 01       	movw	r6, r24
    162e:	f6 01       	movw	r30, r12
    1630:	93 81       	ldd	r25, Z+3	; 0x03
    1632:	f7 01       	movw	r30, r14
    1634:	93 fd       	sbrc	r25, 3
    1636:	85 91       	lpm	r24, Z+
    1638:	93 ff       	sbrs	r25, 3
    163a:	81 91       	ld	r24, Z+
    163c:	7f 01       	movw	r14, r30
    163e:	88 23       	and	r24, r24
    1640:	09 f4       	brne	.+2      	; 0x1644 <vfprintf+0x3a>
    1642:	ba c1       	rjmp	.+884    	; 0x19b8 <vfprintf+0x3ae>
    1644:	85 32       	cpi	r24, 0x25	; 37
    1646:	39 f4       	brne	.+14     	; 0x1656 <vfprintf+0x4c>
    1648:	93 fd       	sbrc	r25, 3
    164a:	85 91       	lpm	r24, Z+
    164c:	93 ff       	sbrs	r25, 3
    164e:	81 91       	ld	r24, Z+
    1650:	7f 01       	movw	r14, r30
    1652:	85 32       	cpi	r24, 0x25	; 37
    1654:	29 f4       	brne	.+10     	; 0x1660 <vfprintf+0x56>
    1656:	b6 01       	movw	r22, r12
    1658:	90 e0       	ldi	r25, 0x00	; 0
    165a:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    165e:	e7 cf       	rjmp	.-50     	; 0x162e <vfprintf+0x24>
    1660:	91 2c       	mov	r9, r1
    1662:	21 2c       	mov	r2, r1
    1664:	31 2c       	mov	r3, r1
    1666:	ff e1       	ldi	r31, 0x1F	; 31
    1668:	f3 15       	cp	r31, r3
    166a:	d8 f0       	brcs	.+54     	; 0x16a2 <vfprintf+0x98>
    166c:	8b 32       	cpi	r24, 0x2B	; 43
    166e:	79 f0       	breq	.+30     	; 0x168e <vfprintf+0x84>
    1670:	38 f4       	brcc	.+14     	; 0x1680 <vfprintf+0x76>
    1672:	80 32       	cpi	r24, 0x20	; 32
    1674:	79 f0       	breq	.+30     	; 0x1694 <vfprintf+0x8a>
    1676:	83 32       	cpi	r24, 0x23	; 35
    1678:	a1 f4       	brne	.+40     	; 0x16a2 <vfprintf+0x98>
    167a:	23 2d       	mov	r18, r3
    167c:	20 61       	ori	r18, 0x10	; 16
    167e:	1d c0       	rjmp	.+58     	; 0x16ba <vfprintf+0xb0>
    1680:	8d 32       	cpi	r24, 0x2D	; 45
    1682:	61 f0       	breq	.+24     	; 0x169c <vfprintf+0x92>
    1684:	80 33       	cpi	r24, 0x30	; 48
    1686:	69 f4       	brne	.+26     	; 0x16a2 <vfprintf+0x98>
    1688:	23 2d       	mov	r18, r3
    168a:	21 60       	ori	r18, 0x01	; 1
    168c:	16 c0       	rjmp	.+44     	; 0x16ba <vfprintf+0xb0>
    168e:	83 2d       	mov	r24, r3
    1690:	82 60       	ori	r24, 0x02	; 2
    1692:	38 2e       	mov	r3, r24
    1694:	e3 2d       	mov	r30, r3
    1696:	e4 60       	ori	r30, 0x04	; 4
    1698:	3e 2e       	mov	r3, r30
    169a:	2a c0       	rjmp	.+84     	; 0x16f0 <vfprintf+0xe6>
    169c:	f3 2d       	mov	r31, r3
    169e:	f8 60       	ori	r31, 0x08	; 8
    16a0:	1d c0       	rjmp	.+58     	; 0x16dc <vfprintf+0xd2>
    16a2:	37 fc       	sbrc	r3, 7
    16a4:	2d c0       	rjmp	.+90     	; 0x1700 <vfprintf+0xf6>
    16a6:	20 ed       	ldi	r18, 0xD0	; 208
    16a8:	28 0f       	add	r18, r24
    16aa:	2a 30       	cpi	r18, 0x0A	; 10
    16ac:	40 f0       	brcs	.+16     	; 0x16be <vfprintf+0xb4>
    16ae:	8e 32       	cpi	r24, 0x2E	; 46
    16b0:	b9 f4       	brne	.+46     	; 0x16e0 <vfprintf+0xd6>
    16b2:	36 fc       	sbrc	r3, 6
    16b4:	81 c1       	rjmp	.+770    	; 0x19b8 <vfprintf+0x3ae>
    16b6:	23 2d       	mov	r18, r3
    16b8:	20 64       	ori	r18, 0x40	; 64
    16ba:	32 2e       	mov	r3, r18
    16bc:	19 c0       	rjmp	.+50     	; 0x16f0 <vfprintf+0xe6>
    16be:	36 fe       	sbrs	r3, 6
    16c0:	06 c0       	rjmp	.+12     	; 0x16ce <vfprintf+0xc4>
    16c2:	8a e0       	ldi	r24, 0x0A	; 10
    16c4:	98 9e       	mul	r9, r24
    16c6:	20 0d       	add	r18, r0
    16c8:	11 24       	eor	r1, r1
    16ca:	92 2e       	mov	r9, r18
    16cc:	11 c0       	rjmp	.+34     	; 0x16f0 <vfprintf+0xe6>
    16ce:	ea e0       	ldi	r30, 0x0A	; 10
    16d0:	2e 9e       	mul	r2, r30
    16d2:	20 0d       	add	r18, r0
    16d4:	11 24       	eor	r1, r1
    16d6:	22 2e       	mov	r2, r18
    16d8:	f3 2d       	mov	r31, r3
    16da:	f0 62       	ori	r31, 0x20	; 32
    16dc:	3f 2e       	mov	r3, r31
    16de:	08 c0       	rjmp	.+16     	; 0x16f0 <vfprintf+0xe6>
    16e0:	8c 36       	cpi	r24, 0x6C	; 108
    16e2:	21 f4       	brne	.+8      	; 0x16ec <vfprintf+0xe2>
    16e4:	83 2d       	mov	r24, r3
    16e6:	80 68       	ori	r24, 0x80	; 128
    16e8:	38 2e       	mov	r3, r24
    16ea:	02 c0       	rjmp	.+4      	; 0x16f0 <vfprintf+0xe6>
    16ec:	88 36       	cpi	r24, 0x68	; 104
    16ee:	41 f4       	brne	.+16     	; 0x1700 <vfprintf+0xf6>
    16f0:	f7 01       	movw	r30, r14
    16f2:	93 fd       	sbrc	r25, 3
    16f4:	85 91       	lpm	r24, Z+
    16f6:	93 ff       	sbrs	r25, 3
    16f8:	81 91       	ld	r24, Z+
    16fa:	7f 01       	movw	r14, r30
    16fc:	81 11       	cpse	r24, r1
    16fe:	b3 cf       	rjmp	.-154    	; 0x1666 <vfprintf+0x5c>
    1700:	98 2f       	mov	r25, r24
    1702:	9f 7d       	andi	r25, 0xDF	; 223
    1704:	95 54       	subi	r25, 0x45	; 69
    1706:	93 30       	cpi	r25, 0x03	; 3
    1708:	28 f4       	brcc	.+10     	; 0x1714 <vfprintf+0x10a>
    170a:	0c 5f       	subi	r16, 0xFC	; 252
    170c:	1f 4f       	sbci	r17, 0xFF	; 255
    170e:	9f e3       	ldi	r25, 0x3F	; 63
    1710:	99 83       	std	Y+1, r25	; 0x01
    1712:	0d c0       	rjmp	.+26     	; 0x172e <vfprintf+0x124>
    1714:	83 36       	cpi	r24, 0x63	; 99
    1716:	31 f0       	breq	.+12     	; 0x1724 <vfprintf+0x11a>
    1718:	83 37       	cpi	r24, 0x73	; 115
    171a:	71 f0       	breq	.+28     	; 0x1738 <vfprintf+0x12e>
    171c:	83 35       	cpi	r24, 0x53	; 83
    171e:	09 f0       	breq	.+2      	; 0x1722 <vfprintf+0x118>
    1720:	59 c0       	rjmp	.+178    	; 0x17d4 <vfprintf+0x1ca>
    1722:	21 c0       	rjmp	.+66     	; 0x1766 <vfprintf+0x15c>
    1724:	f8 01       	movw	r30, r16
    1726:	80 81       	ld	r24, Z
    1728:	89 83       	std	Y+1, r24	; 0x01
    172a:	0e 5f       	subi	r16, 0xFE	; 254
    172c:	1f 4f       	sbci	r17, 0xFF	; 255
    172e:	88 24       	eor	r8, r8
    1730:	83 94       	inc	r8
    1732:	91 2c       	mov	r9, r1
    1734:	53 01       	movw	r10, r6
    1736:	13 c0       	rjmp	.+38     	; 0x175e <vfprintf+0x154>
    1738:	28 01       	movw	r4, r16
    173a:	f2 e0       	ldi	r31, 0x02	; 2
    173c:	4f 0e       	add	r4, r31
    173e:	51 1c       	adc	r5, r1
    1740:	f8 01       	movw	r30, r16
    1742:	a0 80       	ld	r10, Z
    1744:	b1 80       	ldd	r11, Z+1	; 0x01
    1746:	36 fe       	sbrs	r3, 6
    1748:	03 c0       	rjmp	.+6      	; 0x1750 <vfprintf+0x146>
    174a:	69 2d       	mov	r22, r9
    174c:	70 e0       	ldi	r23, 0x00	; 0
    174e:	02 c0       	rjmp	.+4      	; 0x1754 <vfprintf+0x14a>
    1750:	6f ef       	ldi	r22, 0xFF	; 255
    1752:	7f ef       	ldi	r23, 0xFF	; 255
    1754:	c5 01       	movw	r24, r10
    1756:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <strnlen>
    175a:	4c 01       	movw	r8, r24
    175c:	82 01       	movw	r16, r4
    175e:	f3 2d       	mov	r31, r3
    1760:	ff 77       	andi	r31, 0x7F	; 127
    1762:	3f 2e       	mov	r3, r31
    1764:	16 c0       	rjmp	.+44     	; 0x1792 <vfprintf+0x188>
    1766:	28 01       	movw	r4, r16
    1768:	22 e0       	ldi	r18, 0x02	; 2
    176a:	42 0e       	add	r4, r18
    176c:	51 1c       	adc	r5, r1
    176e:	f8 01       	movw	r30, r16
    1770:	a0 80       	ld	r10, Z
    1772:	b1 80       	ldd	r11, Z+1	; 0x01
    1774:	36 fe       	sbrs	r3, 6
    1776:	03 c0       	rjmp	.+6      	; 0x177e <vfprintf+0x174>
    1778:	69 2d       	mov	r22, r9
    177a:	70 e0       	ldi	r23, 0x00	; 0
    177c:	02 c0       	rjmp	.+4      	; 0x1782 <vfprintf+0x178>
    177e:	6f ef       	ldi	r22, 0xFF	; 255
    1780:	7f ef       	ldi	r23, 0xFF	; 255
    1782:	c5 01       	movw	r24, r10
    1784:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <strnlen_P>
    1788:	4c 01       	movw	r8, r24
    178a:	f3 2d       	mov	r31, r3
    178c:	f0 68       	ori	r31, 0x80	; 128
    178e:	3f 2e       	mov	r3, r31
    1790:	82 01       	movw	r16, r4
    1792:	33 fc       	sbrc	r3, 3
    1794:	1b c0       	rjmp	.+54     	; 0x17cc <vfprintf+0x1c2>
    1796:	82 2d       	mov	r24, r2
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	88 16       	cp	r8, r24
    179c:	99 06       	cpc	r9, r25
    179e:	b0 f4       	brcc	.+44     	; 0x17cc <vfprintf+0x1c2>
    17a0:	b6 01       	movw	r22, r12
    17a2:	80 e2       	ldi	r24, 0x20	; 32
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    17aa:	2a 94       	dec	r2
    17ac:	f4 cf       	rjmp	.-24     	; 0x1796 <vfprintf+0x18c>
    17ae:	f5 01       	movw	r30, r10
    17b0:	37 fc       	sbrc	r3, 7
    17b2:	85 91       	lpm	r24, Z+
    17b4:	37 fe       	sbrs	r3, 7
    17b6:	81 91       	ld	r24, Z+
    17b8:	5f 01       	movw	r10, r30
    17ba:	b6 01       	movw	r22, r12
    17bc:	90 e0       	ldi	r25, 0x00	; 0
    17be:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    17c2:	21 10       	cpse	r2, r1
    17c4:	2a 94       	dec	r2
    17c6:	21 e0       	ldi	r18, 0x01	; 1
    17c8:	82 1a       	sub	r8, r18
    17ca:	91 08       	sbc	r9, r1
    17cc:	81 14       	cp	r8, r1
    17ce:	91 04       	cpc	r9, r1
    17d0:	71 f7       	brne	.-36     	; 0x17ae <vfprintf+0x1a4>
    17d2:	e8 c0       	rjmp	.+464    	; 0x19a4 <vfprintf+0x39a>
    17d4:	84 36       	cpi	r24, 0x64	; 100
    17d6:	11 f0       	breq	.+4      	; 0x17dc <vfprintf+0x1d2>
    17d8:	89 36       	cpi	r24, 0x69	; 105
    17da:	41 f5       	brne	.+80     	; 0x182c <vfprintf+0x222>
    17dc:	f8 01       	movw	r30, r16
    17de:	37 fe       	sbrs	r3, 7
    17e0:	07 c0       	rjmp	.+14     	; 0x17f0 <vfprintf+0x1e6>
    17e2:	60 81       	ld	r22, Z
    17e4:	71 81       	ldd	r23, Z+1	; 0x01
    17e6:	82 81       	ldd	r24, Z+2	; 0x02
    17e8:	93 81       	ldd	r25, Z+3	; 0x03
    17ea:	0c 5f       	subi	r16, 0xFC	; 252
    17ec:	1f 4f       	sbci	r17, 0xFF	; 255
    17ee:	08 c0       	rjmp	.+16     	; 0x1800 <vfprintf+0x1f6>
    17f0:	60 81       	ld	r22, Z
    17f2:	71 81       	ldd	r23, Z+1	; 0x01
    17f4:	07 2e       	mov	r0, r23
    17f6:	00 0c       	add	r0, r0
    17f8:	88 0b       	sbc	r24, r24
    17fa:	99 0b       	sbc	r25, r25
    17fc:	0e 5f       	subi	r16, 0xFE	; 254
    17fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1800:	f3 2d       	mov	r31, r3
    1802:	ff 76       	andi	r31, 0x6F	; 111
    1804:	3f 2e       	mov	r3, r31
    1806:	97 ff       	sbrs	r25, 7
    1808:	09 c0       	rjmp	.+18     	; 0x181c <vfprintf+0x212>
    180a:	90 95       	com	r25
    180c:	80 95       	com	r24
    180e:	70 95       	com	r23
    1810:	61 95       	neg	r22
    1812:	7f 4f       	sbci	r23, 0xFF	; 255
    1814:	8f 4f       	sbci	r24, 0xFF	; 255
    1816:	9f 4f       	sbci	r25, 0xFF	; 255
    1818:	f0 68       	ori	r31, 0x80	; 128
    181a:	3f 2e       	mov	r3, r31
    181c:	2a e0       	ldi	r18, 0x0A	; 10
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	a3 01       	movw	r20, r6
    1822:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <__ultoa_invert>
    1826:	88 2e       	mov	r8, r24
    1828:	86 18       	sub	r8, r6
    182a:	45 c0       	rjmp	.+138    	; 0x18b6 <vfprintf+0x2ac>
    182c:	85 37       	cpi	r24, 0x75	; 117
    182e:	31 f4       	brne	.+12     	; 0x183c <vfprintf+0x232>
    1830:	23 2d       	mov	r18, r3
    1832:	2f 7e       	andi	r18, 0xEF	; 239
    1834:	b2 2e       	mov	r11, r18
    1836:	2a e0       	ldi	r18, 0x0A	; 10
    1838:	30 e0       	ldi	r19, 0x00	; 0
    183a:	25 c0       	rjmp	.+74     	; 0x1886 <vfprintf+0x27c>
    183c:	93 2d       	mov	r25, r3
    183e:	99 7f       	andi	r25, 0xF9	; 249
    1840:	b9 2e       	mov	r11, r25
    1842:	8f 36       	cpi	r24, 0x6F	; 111
    1844:	c1 f0       	breq	.+48     	; 0x1876 <vfprintf+0x26c>
    1846:	18 f4       	brcc	.+6      	; 0x184e <vfprintf+0x244>
    1848:	88 35       	cpi	r24, 0x58	; 88
    184a:	79 f0       	breq	.+30     	; 0x186a <vfprintf+0x260>
    184c:	b5 c0       	rjmp	.+362    	; 0x19b8 <vfprintf+0x3ae>
    184e:	80 37       	cpi	r24, 0x70	; 112
    1850:	19 f0       	breq	.+6      	; 0x1858 <vfprintf+0x24e>
    1852:	88 37       	cpi	r24, 0x78	; 120
    1854:	21 f0       	breq	.+8      	; 0x185e <vfprintf+0x254>
    1856:	b0 c0       	rjmp	.+352    	; 0x19b8 <vfprintf+0x3ae>
    1858:	e9 2f       	mov	r30, r25
    185a:	e0 61       	ori	r30, 0x10	; 16
    185c:	be 2e       	mov	r11, r30
    185e:	b4 fe       	sbrs	r11, 4
    1860:	0d c0       	rjmp	.+26     	; 0x187c <vfprintf+0x272>
    1862:	fb 2d       	mov	r31, r11
    1864:	f4 60       	ori	r31, 0x04	; 4
    1866:	bf 2e       	mov	r11, r31
    1868:	09 c0       	rjmp	.+18     	; 0x187c <vfprintf+0x272>
    186a:	34 fe       	sbrs	r3, 4
    186c:	0a c0       	rjmp	.+20     	; 0x1882 <vfprintf+0x278>
    186e:	29 2f       	mov	r18, r25
    1870:	26 60       	ori	r18, 0x06	; 6
    1872:	b2 2e       	mov	r11, r18
    1874:	06 c0       	rjmp	.+12     	; 0x1882 <vfprintf+0x278>
    1876:	28 e0       	ldi	r18, 0x08	; 8
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	05 c0       	rjmp	.+10     	; 0x1886 <vfprintf+0x27c>
    187c:	20 e1       	ldi	r18, 0x10	; 16
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <vfprintf+0x27c>
    1882:	20 e1       	ldi	r18, 0x10	; 16
    1884:	32 e0       	ldi	r19, 0x02	; 2
    1886:	f8 01       	movw	r30, r16
    1888:	b7 fe       	sbrs	r11, 7
    188a:	07 c0       	rjmp	.+14     	; 0x189a <vfprintf+0x290>
    188c:	60 81       	ld	r22, Z
    188e:	71 81       	ldd	r23, Z+1	; 0x01
    1890:	82 81       	ldd	r24, Z+2	; 0x02
    1892:	93 81       	ldd	r25, Z+3	; 0x03
    1894:	0c 5f       	subi	r16, 0xFC	; 252
    1896:	1f 4f       	sbci	r17, 0xFF	; 255
    1898:	06 c0       	rjmp	.+12     	; 0x18a6 <vfprintf+0x29c>
    189a:	60 81       	ld	r22, Z
    189c:	71 81       	ldd	r23, Z+1	; 0x01
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	0e 5f       	subi	r16, 0xFE	; 254
    18a4:	1f 4f       	sbci	r17, 0xFF	; 255
    18a6:	a3 01       	movw	r20, r6
    18a8:	0e 94 38 0d 	call	0x1a70	; 0x1a70 <__ultoa_invert>
    18ac:	88 2e       	mov	r8, r24
    18ae:	86 18       	sub	r8, r6
    18b0:	fb 2d       	mov	r31, r11
    18b2:	ff 77       	andi	r31, 0x7F	; 127
    18b4:	3f 2e       	mov	r3, r31
    18b6:	36 fe       	sbrs	r3, 6
    18b8:	0d c0       	rjmp	.+26     	; 0x18d4 <vfprintf+0x2ca>
    18ba:	23 2d       	mov	r18, r3
    18bc:	2e 7f       	andi	r18, 0xFE	; 254
    18be:	a2 2e       	mov	r10, r18
    18c0:	89 14       	cp	r8, r9
    18c2:	58 f4       	brcc	.+22     	; 0x18da <vfprintf+0x2d0>
    18c4:	34 fe       	sbrs	r3, 4
    18c6:	0b c0       	rjmp	.+22     	; 0x18de <vfprintf+0x2d4>
    18c8:	32 fc       	sbrc	r3, 2
    18ca:	09 c0       	rjmp	.+18     	; 0x18de <vfprintf+0x2d4>
    18cc:	83 2d       	mov	r24, r3
    18ce:	8e 7e       	andi	r24, 0xEE	; 238
    18d0:	a8 2e       	mov	r10, r24
    18d2:	05 c0       	rjmp	.+10     	; 0x18de <vfprintf+0x2d4>
    18d4:	b8 2c       	mov	r11, r8
    18d6:	a3 2c       	mov	r10, r3
    18d8:	03 c0       	rjmp	.+6      	; 0x18e0 <vfprintf+0x2d6>
    18da:	b8 2c       	mov	r11, r8
    18dc:	01 c0       	rjmp	.+2      	; 0x18e0 <vfprintf+0x2d6>
    18de:	b9 2c       	mov	r11, r9
    18e0:	a4 fe       	sbrs	r10, 4
    18e2:	0f c0       	rjmp	.+30     	; 0x1902 <vfprintf+0x2f8>
    18e4:	fe 01       	movw	r30, r28
    18e6:	e8 0d       	add	r30, r8
    18e8:	f1 1d       	adc	r31, r1
    18ea:	80 81       	ld	r24, Z
    18ec:	80 33       	cpi	r24, 0x30	; 48
    18ee:	21 f4       	brne	.+8      	; 0x18f8 <vfprintf+0x2ee>
    18f0:	9a 2d       	mov	r25, r10
    18f2:	99 7e       	andi	r25, 0xE9	; 233
    18f4:	a9 2e       	mov	r10, r25
    18f6:	09 c0       	rjmp	.+18     	; 0x190a <vfprintf+0x300>
    18f8:	a2 fe       	sbrs	r10, 2
    18fa:	06 c0       	rjmp	.+12     	; 0x1908 <vfprintf+0x2fe>
    18fc:	b3 94       	inc	r11
    18fe:	b3 94       	inc	r11
    1900:	04 c0       	rjmp	.+8      	; 0x190a <vfprintf+0x300>
    1902:	8a 2d       	mov	r24, r10
    1904:	86 78       	andi	r24, 0x86	; 134
    1906:	09 f0       	breq	.+2      	; 0x190a <vfprintf+0x300>
    1908:	b3 94       	inc	r11
    190a:	a3 fc       	sbrc	r10, 3
    190c:	11 c0       	rjmp	.+34     	; 0x1930 <vfprintf+0x326>
    190e:	a0 fe       	sbrs	r10, 0
    1910:	06 c0       	rjmp	.+12     	; 0x191e <vfprintf+0x314>
    1912:	b2 14       	cp	r11, r2
    1914:	88 f4       	brcc	.+34     	; 0x1938 <vfprintf+0x32e>
    1916:	28 0c       	add	r2, r8
    1918:	92 2c       	mov	r9, r2
    191a:	9b 18       	sub	r9, r11
    191c:	0e c0       	rjmp	.+28     	; 0x193a <vfprintf+0x330>
    191e:	b2 14       	cp	r11, r2
    1920:	60 f4       	brcc	.+24     	; 0x193a <vfprintf+0x330>
    1922:	b6 01       	movw	r22, r12
    1924:	80 e2       	ldi	r24, 0x20	; 32
    1926:	90 e0       	ldi	r25, 0x00	; 0
    1928:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    192c:	b3 94       	inc	r11
    192e:	f7 cf       	rjmp	.-18     	; 0x191e <vfprintf+0x314>
    1930:	b2 14       	cp	r11, r2
    1932:	18 f4       	brcc	.+6      	; 0x193a <vfprintf+0x330>
    1934:	2b 18       	sub	r2, r11
    1936:	02 c0       	rjmp	.+4      	; 0x193c <vfprintf+0x332>
    1938:	98 2c       	mov	r9, r8
    193a:	21 2c       	mov	r2, r1
    193c:	a4 fe       	sbrs	r10, 4
    193e:	10 c0       	rjmp	.+32     	; 0x1960 <vfprintf+0x356>
    1940:	b6 01       	movw	r22, r12
    1942:	80 e3       	ldi	r24, 0x30	; 48
    1944:	90 e0       	ldi	r25, 0x00	; 0
    1946:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    194a:	a2 fe       	sbrs	r10, 2
    194c:	17 c0       	rjmp	.+46     	; 0x197c <vfprintf+0x372>
    194e:	a1 fc       	sbrc	r10, 1
    1950:	03 c0       	rjmp	.+6      	; 0x1958 <vfprintf+0x34e>
    1952:	88 e7       	ldi	r24, 0x78	; 120
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	02 c0       	rjmp	.+4      	; 0x195c <vfprintf+0x352>
    1958:	88 e5       	ldi	r24, 0x58	; 88
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	b6 01       	movw	r22, r12
    195e:	0c c0       	rjmp	.+24     	; 0x1978 <vfprintf+0x36e>
    1960:	8a 2d       	mov	r24, r10
    1962:	86 78       	andi	r24, 0x86	; 134
    1964:	59 f0       	breq	.+22     	; 0x197c <vfprintf+0x372>
    1966:	a1 fe       	sbrs	r10, 1
    1968:	02 c0       	rjmp	.+4      	; 0x196e <vfprintf+0x364>
    196a:	8b e2       	ldi	r24, 0x2B	; 43
    196c:	01 c0       	rjmp	.+2      	; 0x1970 <vfprintf+0x366>
    196e:	80 e2       	ldi	r24, 0x20	; 32
    1970:	a7 fc       	sbrc	r10, 7
    1972:	8d e2       	ldi	r24, 0x2D	; 45
    1974:	b6 01       	movw	r22, r12
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    197c:	89 14       	cp	r8, r9
    197e:	38 f4       	brcc	.+14     	; 0x198e <vfprintf+0x384>
    1980:	b6 01       	movw	r22, r12
    1982:	80 e3       	ldi	r24, 0x30	; 48
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    198a:	9a 94       	dec	r9
    198c:	f7 cf       	rjmp	.-18     	; 0x197c <vfprintf+0x372>
    198e:	8a 94       	dec	r8
    1990:	f3 01       	movw	r30, r6
    1992:	e8 0d       	add	r30, r8
    1994:	f1 1d       	adc	r31, r1
    1996:	80 81       	ld	r24, Z
    1998:	b6 01       	movw	r22, r12
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    19a0:	81 10       	cpse	r8, r1
    19a2:	f5 cf       	rjmp	.-22     	; 0x198e <vfprintf+0x384>
    19a4:	22 20       	and	r2, r2
    19a6:	09 f4       	brne	.+2      	; 0x19aa <vfprintf+0x3a0>
    19a8:	42 ce       	rjmp	.-892    	; 0x162e <vfprintf+0x24>
    19aa:	b6 01       	movw	r22, r12
    19ac:	80 e2       	ldi	r24, 0x20	; 32
    19ae:	90 e0       	ldi	r25, 0x00	; 0
    19b0:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fputc>
    19b4:	2a 94       	dec	r2
    19b6:	f6 cf       	rjmp	.-20     	; 0x19a4 <vfprintf+0x39a>
    19b8:	f6 01       	movw	r30, r12
    19ba:	86 81       	ldd	r24, Z+6	; 0x06
    19bc:	97 81       	ldd	r25, Z+7	; 0x07
    19be:	02 c0       	rjmp	.+4      	; 0x19c4 <vfprintf+0x3ba>
    19c0:	8f ef       	ldi	r24, 0xFF	; 255
    19c2:	9f ef       	ldi	r25, 0xFF	; 255
    19c4:	2b 96       	adiw	r28, 0x0b	; 11
    19c6:	e2 e1       	ldi	r30, 0x12	; 18
    19c8:	0c 94 e4 0d 	jmp	0x1bc8	; 0x1bc8 <__epilogue_restores__>

000019cc <strnlen_P>:
    19cc:	fc 01       	movw	r30, r24
    19ce:	05 90       	lpm	r0, Z+
    19d0:	61 50       	subi	r22, 0x01	; 1
    19d2:	70 40       	sbci	r23, 0x00	; 0
    19d4:	01 10       	cpse	r0, r1
    19d6:	d8 f7       	brcc	.-10     	; 0x19ce <strnlen_P+0x2>
    19d8:	80 95       	com	r24
    19da:	90 95       	com	r25
    19dc:	8e 0f       	add	r24, r30
    19de:	9f 1f       	adc	r25, r31
    19e0:	08 95       	ret

000019e2 <strnlen>:
    19e2:	fc 01       	movw	r30, r24
    19e4:	61 50       	subi	r22, 0x01	; 1
    19e6:	70 40       	sbci	r23, 0x00	; 0
    19e8:	01 90       	ld	r0, Z+
    19ea:	01 10       	cpse	r0, r1
    19ec:	d8 f7       	brcc	.-10     	; 0x19e4 <strnlen+0x2>
    19ee:	80 95       	com	r24
    19f0:	90 95       	com	r25
    19f2:	8e 0f       	add	r24, r30
    19f4:	9f 1f       	adc	r25, r31
    19f6:	08 95       	ret

000019f8 <fputc>:
    19f8:	0f 93       	push	r16
    19fa:	1f 93       	push	r17
    19fc:	cf 93       	push	r28
    19fe:	df 93       	push	r29
    1a00:	fb 01       	movw	r30, r22
    1a02:	23 81       	ldd	r18, Z+3	; 0x03
    1a04:	21 fd       	sbrc	r18, 1
    1a06:	03 c0       	rjmp	.+6      	; 0x1a0e <fputc+0x16>
    1a08:	8f ef       	ldi	r24, 0xFF	; 255
    1a0a:	9f ef       	ldi	r25, 0xFF	; 255
    1a0c:	2c c0       	rjmp	.+88     	; 0x1a66 <fputc+0x6e>
    1a0e:	22 ff       	sbrs	r18, 2
    1a10:	16 c0       	rjmp	.+44     	; 0x1a3e <fputc+0x46>
    1a12:	46 81       	ldd	r20, Z+6	; 0x06
    1a14:	57 81       	ldd	r21, Z+7	; 0x07
    1a16:	24 81       	ldd	r18, Z+4	; 0x04
    1a18:	35 81       	ldd	r19, Z+5	; 0x05
    1a1a:	42 17       	cp	r20, r18
    1a1c:	53 07       	cpc	r21, r19
    1a1e:	44 f4       	brge	.+16     	; 0x1a30 <fputc+0x38>
    1a20:	a0 81       	ld	r26, Z
    1a22:	b1 81       	ldd	r27, Z+1	; 0x01
    1a24:	9d 01       	movw	r18, r26
    1a26:	2f 5f       	subi	r18, 0xFF	; 255
    1a28:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2a:	31 83       	std	Z+1, r19	; 0x01
    1a2c:	20 83       	st	Z, r18
    1a2e:	8c 93       	st	X, r24
    1a30:	26 81       	ldd	r18, Z+6	; 0x06
    1a32:	37 81       	ldd	r19, Z+7	; 0x07
    1a34:	2f 5f       	subi	r18, 0xFF	; 255
    1a36:	3f 4f       	sbci	r19, 0xFF	; 255
    1a38:	37 83       	std	Z+7, r19	; 0x07
    1a3a:	26 83       	std	Z+6, r18	; 0x06
    1a3c:	14 c0       	rjmp	.+40     	; 0x1a66 <fputc+0x6e>
    1a3e:	8b 01       	movw	r16, r22
    1a40:	ec 01       	movw	r28, r24
    1a42:	fb 01       	movw	r30, r22
    1a44:	00 84       	ldd	r0, Z+8	; 0x08
    1a46:	f1 85       	ldd	r31, Z+9	; 0x09
    1a48:	e0 2d       	mov	r30, r0
    1a4a:	09 95       	icall
    1a4c:	89 2b       	or	r24, r25
    1a4e:	e1 f6       	brne	.-72     	; 0x1a08 <fputc+0x10>
    1a50:	d8 01       	movw	r26, r16
    1a52:	16 96       	adiw	r26, 0x06	; 6
    1a54:	8d 91       	ld	r24, X+
    1a56:	9c 91       	ld	r25, X
    1a58:	17 97       	sbiw	r26, 0x07	; 7
    1a5a:	01 96       	adiw	r24, 0x01	; 1
    1a5c:	17 96       	adiw	r26, 0x07	; 7
    1a5e:	9c 93       	st	X, r25
    1a60:	8e 93       	st	-X, r24
    1a62:	16 97       	sbiw	r26, 0x06	; 6
    1a64:	ce 01       	movw	r24, r28
    1a66:	df 91       	pop	r29
    1a68:	cf 91       	pop	r28
    1a6a:	1f 91       	pop	r17
    1a6c:	0f 91       	pop	r16
    1a6e:	08 95       	ret

00001a70 <__ultoa_invert>:
    1a70:	fa 01       	movw	r30, r20
    1a72:	aa 27       	eor	r26, r26
    1a74:	28 30       	cpi	r18, 0x08	; 8
    1a76:	51 f1       	breq	.+84     	; 0x1acc <__ultoa_invert+0x5c>
    1a78:	20 31       	cpi	r18, 0x10	; 16
    1a7a:	81 f1       	breq	.+96     	; 0x1adc <__ultoa_invert+0x6c>
    1a7c:	e8 94       	clt
    1a7e:	6f 93       	push	r22
    1a80:	6e 7f       	andi	r22, 0xFE	; 254
    1a82:	6e 5f       	subi	r22, 0xFE	; 254
    1a84:	7f 4f       	sbci	r23, 0xFF	; 255
    1a86:	8f 4f       	sbci	r24, 0xFF	; 255
    1a88:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8a:	af 4f       	sbci	r26, 0xFF	; 255
    1a8c:	b1 e0       	ldi	r27, 0x01	; 1
    1a8e:	3e d0       	rcall	.+124    	; 0x1b0c <__ultoa_invert+0x9c>
    1a90:	b4 e0       	ldi	r27, 0x04	; 4
    1a92:	3c d0       	rcall	.+120    	; 0x1b0c <__ultoa_invert+0x9c>
    1a94:	67 0f       	add	r22, r23
    1a96:	78 1f       	adc	r23, r24
    1a98:	89 1f       	adc	r24, r25
    1a9a:	9a 1f       	adc	r25, r26
    1a9c:	a1 1d       	adc	r26, r1
    1a9e:	68 0f       	add	r22, r24
    1aa0:	79 1f       	adc	r23, r25
    1aa2:	8a 1f       	adc	r24, r26
    1aa4:	91 1d       	adc	r25, r1
    1aa6:	a1 1d       	adc	r26, r1
    1aa8:	6a 0f       	add	r22, r26
    1aaa:	71 1d       	adc	r23, r1
    1aac:	81 1d       	adc	r24, r1
    1aae:	91 1d       	adc	r25, r1
    1ab0:	a1 1d       	adc	r26, r1
    1ab2:	20 d0       	rcall	.+64     	; 0x1af4 <__ultoa_invert+0x84>
    1ab4:	09 f4       	brne	.+2      	; 0x1ab8 <__ultoa_invert+0x48>
    1ab6:	68 94       	set
    1ab8:	3f 91       	pop	r19
    1aba:	2a e0       	ldi	r18, 0x0A	; 10
    1abc:	26 9f       	mul	r18, r22
    1abe:	11 24       	eor	r1, r1
    1ac0:	30 19       	sub	r19, r0
    1ac2:	30 5d       	subi	r19, 0xD0	; 208
    1ac4:	31 93       	st	Z+, r19
    1ac6:	de f6       	brtc	.-74     	; 0x1a7e <__ultoa_invert+0xe>
    1ac8:	cf 01       	movw	r24, r30
    1aca:	08 95       	ret
    1acc:	46 2f       	mov	r20, r22
    1ace:	47 70       	andi	r20, 0x07	; 7
    1ad0:	40 5d       	subi	r20, 0xD0	; 208
    1ad2:	41 93       	st	Z+, r20
    1ad4:	b3 e0       	ldi	r27, 0x03	; 3
    1ad6:	0f d0       	rcall	.+30     	; 0x1af6 <__ultoa_invert+0x86>
    1ad8:	c9 f7       	brne	.-14     	; 0x1acc <__ultoa_invert+0x5c>
    1ada:	f6 cf       	rjmp	.-20     	; 0x1ac8 <__ultoa_invert+0x58>
    1adc:	46 2f       	mov	r20, r22
    1ade:	4f 70       	andi	r20, 0x0F	; 15
    1ae0:	40 5d       	subi	r20, 0xD0	; 208
    1ae2:	4a 33       	cpi	r20, 0x3A	; 58
    1ae4:	18 f0       	brcs	.+6      	; 0x1aec <__ultoa_invert+0x7c>
    1ae6:	49 5d       	subi	r20, 0xD9	; 217
    1ae8:	31 fd       	sbrc	r19, 1
    1aea:	40 52       	subi	r20, 0x20	; 32
    1aec:	41 93       	st	Z+, r20
    1aee:	02 d0       	rcall	.+4      	; 0x1af4 <__ultoa_invert+0x84>
    1af0:	a9 f7       	brne	.-22     	; 0x1adc <__ultoa_invert+0x6c>
    1af2:	ea cf       	rjmp	.-44     	; 0x1ac8 <__ultoa_invert+0x58>
    1af4:	b4 e0       	ldi	r27, 0x04	; 4
    1af6:	a6 95       	lsr	r26
    1af8:	97 95       	ror	r25
    1afa:	87 95       	ror	r24
    1afc:	77 95       	ror	r23
    1afe:	67 95       	ror	r22
    1b00:	ba 95       	dec	r27
    1b02:	c9 f7       	brne	.-14     	; 0x1af6 <__ultoa_invert+0x86>
    1b04:	00 97       	sbiw	r24, 0x00	; 0
    1b06:	61 05       	cpc	r22, r1
    1b08:	71 05       	cpc	r23, r1
    1b0a:	08 95       	ret
    1b0c:	9b 01       	movw	r18, r22
    1b0e:	ac 01       	movw	r20, r24
    1b10:	0a 2e       	mov	r0, r26
    1b12:	06 94       	lsr	r0
    1b14:	57 95       	ror	r21
    1b16:	47 95       	ror	r20
    1b18:	37 95       	ror	r19
    1b1a:	27 95       	ror	r18
    1b1c:	ba 95       	dec	r27
    1b1e:	c9 f7       	brne	.-14     	; 0x1b12 <__ultoa_invert+0xa2>
    1b20:	62 0f       	add	r22, r18
    1b22:	73 1f       	adc	r23, r19
    1b24:	84 1f       	adc	r24, r20
    1b26:	95 1f       	adc	r25, r21
    1b28:	a0 1d       	adc	r26, r0
    1b2a:	08 95       	ret

00001b2c <__divmodsi4>:
    1b2c:	05 2e       	mov	r0, r21
    1b2e:	97 fb       	bst	r25, 7
    1b30:	1e f4       	brtc	.+6      	; 0x1b38 <__divmodsi4+0xc>
    1b32:	00 94       	com	r0
    1b34:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <__negsi2>
    1b38:	57 fd       	sbrc	r21, 7
    1b3a:	07 d0       	rcall	.+14     	; 0x1b4a <__divmodsi4_neg2>
    1b3c:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <__udivmodsi4>
    1b40:	07 fc       	sbrc	r0, 7
    1b42:	03 d0       	rcall	.+6      	; 0x1b4a <__divmodsi4_neg2>
    1b44:	4e f4       	brtc	.+18     	; 0x1b58 <__divmodsi4_exit>
    1b46:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__negsi2>

00001b4a <__divmodsi4_neg2>:
    1b4a:	50 95       	com	r21
    1b4c:	40 95       	com	r20
    1b4e:	30 95       	com	r19
    1b50:	21 95       	neg	r18
    1b52:	3f 4f       	sbci	r19, 0xFF	; 255
    1b54:	4f 4f       	sbci	r20, 0xFF	; 255
    1b56:	5f 4f       	sbci	r21, 0xFF	; 255

00001b58 <__divmodsi4_exit>:
    1b58:	08 95       	ret

00001b5a <__negsi2>:
    1b5a:	90 95       	com	r25
    1b5c:	80 95       	com	r24
    1b5e:	70 95       	com	r23
    1b60:	61 95       	neg	r22
    1b62:	7f 4f       	sbci	r23, 0xFF	; 255
    1b64:	8f 4f       	sbci	r24, 0xFF	; 255
    1b66:	9f 4f       	sbci	r25, 0xFF	; 255
    1b68:	08 95       	ret

00001b6a <__muluhisi3>:
    1b6a:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <__umulhisi3>
    1b6e:	a5 9f       	mul	r26, r21
    1b70:	90 0d       	add	r25, r0
    1b72:	b4 9f       	mul	r27, r20
    1b74:	90 0d       	add	r25, r0
    1b76:	a4 9f       	mul	r26, r20
    1b78:	80 0d       	add	r24, r0
    1b7a:	91 1d       	adc	r25, r1
    1b7c:	11 24       	eor	r1, r1
    1b7e:	08 95       	ret

00001b80 <__mulshisi3>:
    1b80:	b7 ff       	sbrs	r27, 7
    1b82:	0c 94 b5 0d 	jmp	0x1b6a	; 0x1b6a <__muluhisi3>

00001b86 <__mulohisi3>:
    1b86:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <__muluhisi3>
    1b8a:	82 1b       	sub	r24, r18
    1b8c:	93 0b       	sbc	r25, r19
    1b8e:	08 95       	ret

00001b90 <__prologue_saves__>:
    1b90:	2f 92       	push	r2
    1b92:	3f 92       	push	r3
    1b94:	4f 92       	push	r4
    1b96:	5f 92       	push	r5
    1b98:	6f 92       	push	r6
    1b9a:	7f 92       	push	r7
    1b9c:	8f 92       	push	r8
    1b9e:	9f 92       	push	r9
    1ba0:	af 92       	push	r10
    1ba2:	bf 92       	push	r11
    1ba4:	cf 92       	push	r12
    1ba6:	df 92       	push	r13
    1ba8:	ef 92       	push	r14
    1baa:	ff 92       	push	r15
    1bac:	0f 93       	push	r16
    1bae:	1f 93       	push	r17
    1bb0:	cf 93       	push	r28
    1bb2:	df 93       	push	r29
    1bb4:	cd b7       	in	r28, 0x3d	; 61
    1bb6:	de b7       	in	r29, 0x3e	; 62
    1bb8:	ca 1b       	sub	r28, r26
    1bba:	db 0b       	sbc	r29, r27
    1bbc:	0f b6       	in	r0, 0x3f	; 63
    1bbe:	f8 94       	cli
    1bc0:	de bf       	out	0x3e, r29	; 62
    1bc2:	0f be       	out	0x3f, r0	; 63
    1bc4:	cd bf       	out	0x3d, r28	; 61
    1bc6:	09 94       	ijmp

00001bc8 <__epilogue_restores__>:
    1bc8:	2a 88       	ldd	r2, Y+18	; 0x12
    1bca:	39 88       	ldd	r3, Y+17	; 0x11
    1bcc:	48 88       	ldd	r4, Y+16	; 0x10
    1bce:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bd0:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bd2:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bd4:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bd6:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bd8:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bda:	b9 84       	ldd	r11, Y+9	; 0x09
    1bdc:	c8 84       	ldd	r12, Y+8	; 0x08
    1bde:	df 80       	ldd	r13, Y+7	; 0x07
    1be0:	ee 80       	ldd	r14, Y+6	; 0x06
    1be2:	fd 80       	ldd	r15, Y+5	; 0x05
    1be4:	0c 81       	ldd	r16, Y+4	; 0x04
    1be6:	1b 81       	ldd	r17, Y+3	; 0x03
    1be8:	aa 81       	ldd	r26, Y+2	; 0x02
    1bea:	b9 81       	ldd	r27, Y+1	; 0x01
    1bec:	ce 0f       	add	r28, r30
    1bee:	d1 1d       	adc	r29, r1
    1bf0:	0f b6       	in	r0, 0x3f	; 63
    1bf2:	f8 94       	cli
    1bf4:	de bf       	out	0x3e, r29	; 62
    1bf6:	0f be       	out	0x3f, r0	; 63
    1bf8:	cd bf       	out	0x3d, r28	; 61
    1bfa:	ed 01       	movw	r28, r26
    1bfc:	08 95       	ret

00001bfe <__udivmodsi4>:
    1bfe:	a1 e2       	ldi	r26, 0x21	; 33
    1c00:	1a 2e       	mov	r1, r26
    1c02:	aa 1b       	sub	r26, r26
    1c04:	bb 1b       	sub	r27, r27
    1c06:	fd 01       	movw	r30, r26
    1c08:	0d c0       	rjmp	.+26     	; 0x1c24 <__udivmodsi4_ep>

00001c0a <__udivmodsi4_loop>:
    1c0a:	aa 1f       	adc	r26, r26
    1c0c:	bb 1f       	adc	r27, r27
    1c0e:	ee 1f       	adc	r30, r30
    1c10:	ff 1f       	adc	r31, r31
    1c12:	a2 17       	cp	r26, r18
    1c14:	b3 07       	cpc	r27, r19
    1c16:	e4 07       	cpc	r30, r20
    1c18:	f5 07       	cpc	r31, r21
    1c1a:	20 f0       	brcs	.+8      	; 0x1c24 <__udivmodsi4_ep>
    1c1c:	a2 1b       	sub	r26, r18
    1c1e:	b3 0b       	sbc	r27, r19
    1c20:	e4 0b       	sbc	r30, r20
    1c22:	f5 0b       	sbc	r31, r21

00001c24 <__udivmodsi4_ep>:
    1c24:	66 1f       	adc	r22, r22
    1c26:	77 1f       	adc	r23, r23
    1c28:	88 1f       	adc	r24, r24
    1c2a:	99 1f       	adc	r25, r25
    1c2c:	1a 94       	dec	r1
    1c2e:	69 f7       	brne	.-38     	; 0x1c0a <__udivmodsi4_loop>
    1c30:	60 95       	com	r22
    1c32:	70 95       	com	r23
    1c34:	80 95       	com	r24
    1c36:	90 95       	com	r25
    1c38:	9b 01       	movw	r18, r22
    1c3a:	ac 01       	movw	r20, r24
    1c3c:	bd 01       	movw	r22, r26
    1c3e:	cf 01       	movw	r24, r30
    1c40:	08 95       	ret

00001c42 <__umulhisi3>:
    1c42:	a2 9f       	mul	r26, r18
    1c44:	b0 01       	movw	r22, r0
    1c46:	b3 9f       	mul	r27, r19
    1c48:	c0 01       	movw	r24, r0
    1c4a:	a3 9f       	mul	r26, r19
    1c4c:	70 0d       	add	r23, r0
    1c4e:	81 1d       	adc	r24, r1
    1c50:	11 24       	eor	r1, r1
    1c52:	91 1d       	adc	r25, r1
    1c54:	b2 9f       	mul	r27, r18
    1c56:	70 0d       	add	r23, r0
    1c58:	81 1d       	adc	r24, r1
    1c5a:	11 24       	eor	r1, r1
    1c5c:	91 1d       	adc	r25, r1
    1c5e:	08 95       	ret

00001c60 <_exit>:
    1c60:	f8 94       	cli

00001c62 <__stop_program>:
    1c62:	ff cf       	rjmp	.-2      	; 0x1c62 <__stop_program>
