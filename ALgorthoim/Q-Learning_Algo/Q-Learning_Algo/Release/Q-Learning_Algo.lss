
Q-Learning_Algo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000024a  000002de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800104  00800104  000002e2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000314  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000948  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000eea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  0000101e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a4 e0       	ldi	r26, 0x04	; 4
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 30       	cpi	r26, 0x06	; 6
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	ea e4       	ldi	r30, 0x4A	; 74
  8c:	f2 e0       	ldi	r31, 0x02	; 2
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a4 30       	cpi	r26, 0x04	; 4
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>
  9a:	0e 94 61 00 	call	0xc2	; 0xc2 <main>
  9e:	0c 94 23 01 	jmp	0x246	; 0x246 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Explore_Exploit>:
  a6:	0e 94 b0 00 	call	0x160	; 0x160 <rand>
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_end>
  b2:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_end+0x1>
  b6:	12 16       	cp	r1, r18
  b8:	13 06       	cpc	r1, r19
  ba:	14 f0       	brlt	.+4      	; 0xc0 <Explore_Exploit+0x1a>
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <main>:
  c2:	0e 94 53 00 	call	0xa6	; 0xa6 <Explore_Exploit>
  c6:	fd cf       	rjmp	.-6      	; 0xc2 <main>

000000c8 <do_rand>:
  c8:	8f 92       	push	r8
  ca:	9f 92       	push	r9
  cc:	af 92       	push	r10
  ce:	bf 92       	push	r11
  d0:	cf 92       	push	r12
  d2:	df 92       	push	r13
  d4:	ef 92       	push	r14
  d6:	ff 92       	push	r15
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	ec 01       	movw	r28, r24
  de:	68 81       	ld	r22, Y
  e0:	79 81       	ldd	r23, Y+1	; 0x01
  e2:	8a 81       	ldd	r24, Y+2	; 0x02
  e4:	9b 81       	ldd	r25, Y+3	; 0x03
  e6:	61 15       	cp	r22, r1
  e8:	71 05       	cpc	r23, r1
  ea:	81 05       	cpc	r24, r1
  ec:	91 05       	cpc	r25, r1
  ee:	21 f4       	brne	.+8      	; 0xf8 <do_rand+0x30>
  f0:	64 e2       	ldi	r22, 0x24	; 36
  f2:	79 ed       	ldi	r23, 0xD9	; 217
  f4:	8b e5       	ldi	r24, 0x5B	; 91
  f6:	97 e0       	ldi	r25, 0x07	; 7
  f8:	2d e1       	ldi	r18, 0x1D	; 29
  fa:	33 ef       	ldi	r19, 0xF3	; 243
  fc:	41 e0       	ldi	r20, 0x01	; 1
  fe:	50 e0       	ldi	r21, 0x00	; 0
 100:	0e 94 c0 00 	call	0x180	; 0x180 <__divmodsi4>
 104:	49 01       	movw	r8, r18
 106:	5a 01       	movw	r10, r20
 108:	9b 01       	movw	r18, r22
 10a:	ac 01       	movw	r20, r24
 10c:	a7 ea       	ldi	r26, 0xA7	; 167
 10e:	b1 e4       	ldi	r27, 0x41	; 65
 110:	0e 94 df 00 	call	0x1be	; 0x1be <__muluhisi3>
 114:	6b 01       	movw	r12, r22
 116:	7c 01       	movw	r14, r24
 118:	ac ee       	ldi	r26, 0xEC	; 236
 11a:	b4 ef       	ldi	r27, 0xF4	; 244
 11c:	a5 01       	movw	r20, r10
 11e:	94 01       	movw	r18, r8
 120:	0e 94 ed 00 	call	0x1da	; 0x1da <__mulohisi3>
 124:	dc 01       	movw	r26, r24
 126:	cb 01       	movw	r24, r22
 128:	8c 0d       	add	r24, r12
 12a:	9d 1d       	adc	r25, r13
 12c:	ae 1d       	adc	r26, r14
 12e:	bf 1d       	adc	r27, r15
 130:	b7 ff       	sbrs	r27, 7
 132:	03 c0       	rjmp	.+6      	; 0x13a <do_rand+0x72>
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	a1 09       	sbc	r26, r1
 138:	b0 48       	sbci	r27, 0x80	; 128
 13a:	88 83       	st	Y, r24
 13c:	99 83       	std	Y+1, r25	; 0x01
 13e:	aa 83       	std	Y+2, r26	; 0x02
 140:	bb 83       	std	Y+3, r27	; 0x03
 142:	9f 77       	andi	r25, 0x7F	; 127
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	ff 90       	pop	r15
 14a:	ef 90       	pop	r14
 14c:	df 90       	pop	r13
 14e:	cf 90       	pop	r12
 150:	bf 90       	pop	r11
 152:	af 90       	pop	r10
 154:	9f 90       	pop	r9
 156:	8f 90       	pop	r8
 158:	08 95       	ret

0000015a <rand_r>:
 15a:	0e 94 64 00 	call	0xc8	; 0xc8 <do_rand>
 15e:	08 95       	ret

00000160 <rand>:
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	0e 94 64 00 	call	0xc8	; 0xc8 <do_rand>
 168:	08 95       	ret

0000016a <srand>:
 16a:	a0 e0       	ldi	r26, 0x00	; 0
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 172:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 176:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 17a:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 17e:	08 95       	ret

00000180 <__divmodsi4>:
 180:	05 2e       	mov	r0, r21
 182:	97 fb       	bst	r25, 7
 184:	1e f4       	brtc	.+6      	; 0x18c <__divmodsi4+0xc>
 186:	00 94       	com	r0
 188:	0e 94 d7 00 	call	0x1ae	; 0x1ae <__negsi2>
 18c:	57 fd       	sbrc	r21, 7
 18e:	07 d0       	rcall	.+14     	; 0x19e <__divmodsi4_neg2>
 190:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <__udivmodsi4>
 194:	07 fc       	sbrc	r0, 7
 196:	03 d0       	rcall	.+6      	; 0x19e <__divmodsi4_neg2>
 198:	4e f4       	brtc	.+18     	; 0x1ac <__divmodsi4_exit>
 19a:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__negsi2>

0000019e <__divmodsi4_neg2>:
 19e:	50 95       	com	r21
 1a0:	40 95       	com	r20
 1a2:	30 95       	com	r19
 1a4:	21 95       	neg	r18
 1a6:	3f 4f       	sbci	r19, 0xFF	; 255
 1a8:	4f 4f       	sbci	r20, 0xFF	; 255
 1aa:	5f 4f       	sbci	r21, 0xFF	; 255

000001ac <__divmodsi4_exit>:
 1ac:	08 95       	ret

000001ae <__negsi2>:
 1ae:	90 95       	com	r25
 1b0:	80 95       	com	r24
 1b2:	70 95       	com	r23
 1b4:	61 95       	neg	r22
 1b6:	7f 4f       	sbci	r23, 0xFF	; 255
 1b8:	8f 4f       	sbci	r24, 0xFF	; 255
 1ba:	9f 4f       	sbci	r25, 0xFF	; 255
 1bc:	08 95       	ret

000001be <__muluhisi3>:
 1be:	0e 94 14 01 	call	0x228	; 0x228 <__umulhisi3>
 1c2:	a5 9f       	mul	r26, r21
 1c4:	90 0d       	add	r25, r0
 1c6:	b4 9f       	mul	r27, r20
 1c8:	90 0d       	add	r25, r0
 1ca:	a4 9f       	mul	r26, r20
 1cc:	80 0d       	add	r24, r0
 1ce:	91 1d       	adc	r25, r1
 1d0:	11 24       	eor	r1, r1
 1d2:	08 95       	ret

000001d4 <__mulshisi3>:
 1d4:	b7 ff       	sbrs	r27, 7
 1d6:	0c 94 df 00 	jmp	0x1be	; 0x1be <__muluhisi3>

000001da <__mulohisi3>:
 1da:	0e 94 df 00 	call	0x1be	; 0x1be <__muluhisi3>
 1de:	82 1b       	sub	r24, r18
 1e0:	93 0b       	sbc	r25, r19
 1e2:	08 95       	ret

000001e4 <__udivmodsi4>:
 1e4:	a1 e2       	ldi	r26, 0x21	; 33
 1e6:	1a 2e       	mov	r1, r26
 1e8:	aa 1b       	sub	r26, r26
 1ea:	bb 1b       	sub	r27, r27
 1ec:	fd 01       	movw	r30, r26
 1ee:	0d c0       	rjmp	.+26     	; 0x20a <__udivmodsi4_ep>

000001f0 <__udivmodsi4_loop>:
 1f0:	aa 1f       	adc	r26, r26
 1f2:	bb 1f       	adc	r27, r27
 1f4:	ee 1f       	adc	r30, r30
 1f6:	ff 1f       	adc	r31, r31
 1f8:	a2 17       	cp	r26, r18
 1fa:	b3 07       	cpc	r27, r19
 1fc:	e4 07       	cpc	r30, r20
 1fe:	f5 07       	cpc	r31, r21
 200:	20 f0       	brcs	.+8      	; 0x20a <__udivmodsi4_ep>
 202:	a2 1b       	sub	r26, r18
 204:	b3 0b       	sbc	r27, r19
 206:	e4 0b       	sbc	r30, r20
 208:	f5 0b       	sbc	r31, r21

0000020a <__udivmodsi4_ep>:
 20a:	66 1f       	adc	r22, r22
 20c:	77 1f       	adc	r23, r23
 20e:	88 1f       	adc	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	1a 94       	dec	r1
 214:	69 f7       	brne	.-38     	; 0x1f0 <__udivmodsi4_loop>
 216:	60 95       	com	r22
 218:	70 95       	com	r23
 21a:	80 95       	com	r24
 21c:	90 95       	com	r25
 21e:	9b 01       	movw	r18, r22
 220:	ac 01       	movw	r20, r24
 222:	bd 01       	movw	r22, r26
 224:	cf 01       	movw	r24, r30
 226:	08 95       	ret

00000228 <__umulhisi3>:
 228:	a2 9f       	mul	r26, r18
 22a:	b0 01       	movw	r22, r0
 22c:	b3 9f       	mul	r27, r19
 22e:	c0 01       	movw	r24, r0
 230:	a3 9f       	mul	r26, r19
 232:	70 0d       	add	r23, r0
 234:	81 1d       	adc	r24, r1
 236:	11 24       	eor	r1, r1
 238:	91 1d       	adc	r25, r1
 23a:	b2 9f       	mul	r27, r18
 23c:	70 0d       	add	r23, r0
 23e:	81 1d       	adc	r24, r1
 240:	11 24       	eor	r1, r1
 242:	91 1d       	adc	r25, r1
 244:	08 95       	ret

00000246 <_exit>:
 246:	f8 94       	cli

00000248 <__stop_program>:
 248:	ff cf       	rjmp	.-2      	; 0x248 <__stop_program>
